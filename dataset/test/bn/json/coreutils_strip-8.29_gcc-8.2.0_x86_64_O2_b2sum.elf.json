{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_b2sum.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 159,
    "funcInfo": [
        {
            "funcName": "sub_4016e0",
            "funcStartAddr": "0x4016e0",
            "funcEndAddr": "0x4016ec",
            "decompiledFuncCode": "int64_t sub_4016e0()\n{\n    int64_t var_8 = data_60e008;\n    /* jump -> data_60e010 */\n}\n\n"
        },
        {
            "funcName": "sub_4016f6",
            "funcStartAddr": "0x4016f6",
            "funcEndAddr": "0x401700",
            "decompiledFuncCode": "int64_t sub_4016f6()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401806",
            "funcStartAddr": "0x401806",
            "funcEndAddr": "0x401810",
            "decompiledFuncCode": "int64_t sub_401806()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401816",
            "funcStartAddr": "0x401816",
            "funcEndAddr": "0x401820",
            "decompiledFuncCode": "int64_t sub_401816()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401826",
            "funcStartAddr": "0x401826",
            "funcEndAddr": "0x401830",
            "decompiledFuncCode": "int64_t sub_401826()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401836",
            "funcStartAddr": "0x401836",
            "funcEndAddr": "0x401840",
            "decompiledFuncCode": "int64_t sub_401836()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401846",
            "funcStartAddr": "0x401846",
            "funcEndAddr": "0x401850",
            "decompiledFuncCode": "int64_t sub_401846()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401856",
            "funcStartAddr": "0x401856",
            "funcEndAddr": "0x401860",
            "decompiledFuncCode": "int64_t sub_401856()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401866",
            "funcStartAddr": "0x401866",
            "funcEndAddr": "0x401870",
            "decompiledFuncCode": "int64_t sub_401866()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401876",
            "funcStartAddr": "0x401876",
            "funcEndAddr": "0x401880",
            "decompiledFuncCode": "int64_t sub_401876()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401886",
            "funcStartAddr": "0x401886",
            "funcEndAddr": "0x401890",
            "decompiledFuncCode": "int64_t sub_401886()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401896",
            "funcStartAddr": "0x401896",
            "funcEndAddr": "0x4018a0",
            "decompiledFuncCode": "int64_t sub_401896()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401906",
            "funcStartAddr": "0x401906",
            "funcEndAddr": "0x401910",
            "decompiledFuncCode": "int64_t sub_401906()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401916",
            "funcStartAddr": "0x401916",
            "funcEndAddr": "0x401920",
            "decompiledFuncCode": "int64_t sub_401916()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401926",
            "funcStartAddr": "0x401926",
            "funcEndAddr": "0x401930",
            "decompiledFuncCode": "int64_t sub_401926()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401936",
            "funcStartAddr": "0x401936",
            "funcEndAddr": "0x401940",
            "decompiledFuncCode": "int64_t sub_401936()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401946",
            "funcStartAddr": "0x401946",
            "funcEndAddr": "0x401950",
            "decompiledFuncCode": "int64_t sub_401946()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401976",
            "funcStartAddr": "0x401976",
            "funcEndAddr": "0x401980",
            "decompiledFuncCode": "int64_t sub_401976()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401996",
            "funcStartAddr": "0x401996",
            "funcEndAddr": "0x4019a0",
            "decompiledFuncCode": "int64_t sub_401996()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401a06",
            "funcStartAddr": "0x401a06",
            "funcEndAddr": "0x401a10",
            "decompiledFuncCode": "int64_t sub_401a06()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401a16",
            "funcStartAddr": "0x401a16",
            "funcEndAddr": "0x401a20",
            "decompiledFuncCode": "int64_t sub_401a16()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401a36",
            "funcStartAddr": "0x401a36",
            "funcEndAddr": "0x401a40",
            "decompiledFuncCode": "int64_t sub_401a36()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401a46",
            "funcStartAddr": "0x401a46",
            "funcEndAddr": "0x401a50",
            "decompiledFuncCode": "int64_t sub_401a46()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401a56",
            "funcStartAddr": "0x401a56",
            "funcEndAddr": "0x401a60",
            "decompiledFuncCode": "int64_t sub_401a56()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401a66",
            "funcStartAddr": "0x401a66",
            "funcEndAddr": "0x401a70",
            "decompiledFuncCode": "int64_t sub_401a66()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401a76",
            "funcStartAddr": "0x401a76",
            "funcEndAddr": "0x401a80",
            "decompiledFuncCode": "int64_t sub_401a76()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401a86",
            "funcStartAddr": "0x401a86",
            "funcEndAddr": "0x401a90",
            "decompiledFuncCode": "int64_t sub_401a86()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401a96",
            "funcStartAddr": "0x401a96",
            "funcEndAddr": "0x401aa0",
            "decompiledFuncCode": "int64_t sub_401a96()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401aa6",
            "funcStartAddr": "0x401aa6",
            "funcEndAddr": "0x401ab0",
            "decompiledFuncCode": "int64_t sub_401aa6()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_4016e0();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401b20",
            "funcEndAddr": "0x402e50",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    char r14 = 0;\n    int64_t r13 = 0x40c53f;\n    int32_t rbx = -1;\n    char* rdi = *argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_4057f0(rdi);\n    void var_158;\n    char var_150;\n    setlocale(6, &data_40c524[0x1b], rdx, rcx, r8, r9, var_158, var_150);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_409d30(sub_405670);\n    setvbuf(stdout, nullptr, 1, 0);\n    char var_11d = 0;\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(argc, argv, \"l:bctw\", &data_40aa00, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            int64_t rax_10 = data_60e2f8;\n            data_60e318 = 3;\n            if (rax_10 > 0x200)\n            {\n                error(0, 0, dcgettext(nullptr, \"invalid length: %s\", 5), sub_407410(r13));\n                uint64_t rax_118 = data_60e300;\n                uint64_t rdi_44 = *((rax_118 << 3) + 0x40abb0);\n                void (* rdx_52)();\n                int64_t rsi_25;\n                int64_t rdi_45;\n                rdx_52 = error(1, 0, dcgettext(nullptr, \"maximum digest length for %s is \u2026\", 5), sub_407410(rdi_44), 0x200);\n                /* tailcall */\n                return _start(rdi_45, rsi_25, rdx_52);\n            }\n            bool rdx_1 = (rbx == 0 & var_11d);\n            char const* const rsi_1;\n            if (rax_10 == 0)\n            {\n                if (r14 != 0)\n                {\n                    goto label_401de3;\n                }\n                data_60e2f8 = 0x200;\n                data_60e310 = 0x80;\n                if (rdx_1 != 0)\n                {\n                    goto label_402dbd;\n                }\n                if (data_60e306 != 0)\n                {\n                label_402dcc:\n                    rsi_1 = \"the --ignore-missing option is m\u2026\";\n                    goto label_401e6a;\n                }\n                if (data_60e308 != 0)\n                {\n                label_402aa6:\n                    rsi_1 = \"the --status option is meaningfu\u2026\";\n                    goto label_401e6a;\n                }\n                goto label_401eb1;\n            }\n        label_401de3:\n            data_60e310 = (rax_10 >> 2);\n            if (rdx_1 == 0)\n            {\n                if (r14 != 0)\n                {\n                    rsi_1 = \"the --tag option is meaningless \u2026\";\n                    if (var_11d != 0)\n                    {\n                        goto label_401e6a;\n                    }\n                }\n                if (rbx >= 0)\n                {\n                    rsi_1 = \"the --binary and --text options \u2026\";\n                    if (r14 != 0)\n                    {\n                        goto label_401e6a;\n                    }\n                }\n                if (data_60e306 == 0)\n                {\n                    if (data_60e308 != 0)\n                    {\n                        if (r14 == 0)\n                        {\n                            goto label_402aa6;\n                        }\n                    label_401e31:\n                        if (data_60e307 != 0)\n                        {\n                            goto label_401ecd;\n                        }\n                    label_401e3e:\n                        if (data_60e304 != 0)\n                        {\n                            rsi_1 = \"the --strict option is meaningfu\u2026\";\n                            if (r14 == 0)\n                            {\n                                goto label_401e6a;\n                            }\n                            goto label_401ecd;\n                        }\n                    label_401ecd:\n                        if (rbx != 0xffffffff)\n                        {\n                            goto label_401edc;\n                        }\n                        rbx = 0;\n                    label_401edc:\n                        void* var_110 = &argv[argc];\n                        int64_t rax_16 = data_60e2bc;\n                        if (rax_16 == argc)\n                        {\n                            *var_110 = &data_40c522;\n                            var_110 = (var_110 + 8);\n                        }\n                        void* rax_17 = &argv[rax_16];\n                        void* var_148 = rax_17;\n                        char* var_140;\n                        char var_ff;\n                        char var_fd;\n                        int32_t var_fc;\n                        void var_d8;\n                        if (var_110 <= rax_17)\n                        {\n                            var_ff = 1;\n                        label_40265e:\n                            if (data_60e320 == 0)\n                            {\n                            label_402687:\n                                return (var_ff ^ 1);\n                            }\n                            if (sub_4085e0(stdin) != 0xffffffff)\n                            {\n                                goto label_402687;\n                            }\n                            error(1, *__errno_location(), dcgettext(nullptr, \"standard input\", 5));\n                        label_402af9:\n                            char rbx_11;\n                            char rbp_6;\n                            if (strchr(var_140, 0xa) == 0)\n                            {\n                                rbp_6 = 0;\n                                rbx_11 = 0;\n                                if (var_11d != 0)\n                                {\n                                label_402b2b:\n                                    fputs_unlocked(*((data_60e300 << 3) + 0x40aba0), stdout);\n                                    int64_t rdx_45 = data_60e2f8;\n                                    if (rdx_45 > 0x1ff)\n                                    {\n                                        fwrite_unlocked(&data_409f00, 1, 2, stdout);\n                                        sub_403020(var_140, rbx_11);\n                                        fwrite_unlocked(\") = \", 1, 4, stdout);\n                                    }\n                                    else\n                                    {\n                                        __printf_chk(1, \"-%lu\", rdx_45);\n                                        fwrite_unlocked(&data_409f00, 1, 2, stdout);\n                                        sub_403020(var_140, rbx_11);\n                                        fwrite_unlocked(\") = \", 1, 4, stdout);\n                                        if ((var_11d == 0 && rbp_6 != 0))\n                                        {\n                                            goto label_4027d3;\n                                        }\n                                    }\n                                    if ((data_60e310 >> 1) != 0)\n                                    {\n                                        goto label_4027ff;\n                                    }\n                                label_402834:\n                                    if (var_11d == 0)\n                                    {\n                                        goto label_402860;\n                                    }\n                                label_40283b:\n                                    uint64_t* const rdi_28 = stdout;\n                                    char* rax_79 = stdout[5];\n                                    if (rax_79 >= stdout[6])\n                                    {\n                                        __overflow(rdi_28, 0xa);\n                                        goto label_402648;\n                                    }\n                                    stdout[5] = &rax_79[1];\n                                    *rax_79 = 0xa;\n                                    goto label_402648;\n                                }\n                            label_4027fa:\n                                if ((data_60e310 >> 1) == 0)\n                                {\n                                label_402860:\n                                    uint64_t* const rdi_29 = stdout;\n                                    char* rax_80 = stdout[5];\n                                    if (rax_80 >= stdout[6])\n                                    {\n                                        __overflow(rdi_29, 0x20);\n                                    }\n                                    else\n                                    {\n                                        stdout[5] = &rax_80[1];\n                                        *rax_80 = 0x20;\n                                    }\n                                    uint64_t* const rdi_30 = stdout;\n                                    char* rax_81 = stdout[5];\n                                    if (rax_81 >= stdout[6])\n                                    {\n                                        __overflow(rdi_30, var_fc);\n                                    }\n                                    else\n                                    {\n                                        stdout[5] = &rax_81[1];\n                                        *rax_81 = var_fd;\n                                    }\n                                    sub_403020(var_140, rbx_11);\n                                    goto label_40283b;\n                                }\n                            label_4027ff:\n                                int64_t rbp_3 = 0;\n                                do\n                                {\n                                    uint64_t rdx_32 = *(&var_d8 + rbp_3);\n                                    rbp_3 = (rbp_3 + 1);\n                                    __printf_chk(1, \"%02x\", rdx_32);\n                                } while ((data_60e310 >> 1) > rbp_3);\n                                goto label_402834;\n                            }\n                        label_4027c3:\n                            if (var_11d != 0)\n                            {\n                                uint64_t* const rdi_40 = stdout;\n                                char* rax_113 = stdout[5];\n                                if (stdout[6] <= rax_113)\n                                {\n                                    rbx_11 = 1;\n                                    __overflow(rdi_40, 0x5c);\n                                    rbp_6 = var_11d;\n                                }\n                                else\n                                {\n                                    rbp_6 = var_11d;\n                                    rbx_11 = 1;\n                                    stdout[5] = &rax_113[1];\n                                    *rax_113 = 0x5c;\n                                }\n                                goto label_402b2b;\n                            }\n                            rbx_11 = 1;\n                        label_4027d3:\n                            uint64_t* const rdi_27 = stdout;\n                            char* rax_73 = stdout[5];\n                            if (rax_73 >= stdout[6])\n                            {\n                                __overflow(rdi_27, 0x5c);\n                            }\n                            else\n                            {\n                                stdout[5] = &rax_73[1];\n                                *rax_73 = 0x5c;\n                            }\n                            goto label_4027fa;\n                        }\n                        var_ff = 1;\n                        var_fc = (((rax_17 - rax_17) & 0xfffffff6) + 0x2a);\n                        var_fd = (((rax_17 - rax_17) & 0xfffffff6) + 0x2a);\n                        char rax_61;\n                        do\n                        {\n                            char* rdi_6 = *var_148;\n                            var_140 = rdi_6;\n                            void var_88;\n                            if (r14 != 0)\n                            {\n                                int32_t rax_22 = strcmp(rdi_6, &data_40c522);\n                                char rax_50;\n                                FILE* rax_68;\n                                uint64_t* const r13_1;\n                                if (rax_22 != 0)\n                                {\n                                    rax_68 = sub_405750(var_140, \"r\");\n                                    r13_1 = rax_68;\n                                    if (rax_68 == 0)\n                                    {\n                                    label_402774:\n                                        error(0, *__errno_location(), \"%s\", sub_407290(0, 3, var_140));\n                                        rax_50 = 0;\n                                    label_40244a:\n                                        var_ff = (var_ff & rax_50);\n                                    }\n                                }\n                                else\n                                {\n                                    data_60e320 = 1;\n                                    r13_1 = stdin;\n                                    var_140 = dcgettext(nullptr, \"standard input\", 5);\n                                }\n                                if ((rax_22 == 0 || (rax_22 != 0 && rax_68 != 0)))\n                                {\n                                    char* var_f0 = nullptr;\n                                    int64_t r12_1 = 1;\n                                    uint64_t var_e8 = 0;\n                                    char var_fe_1 = 0;\n                                    char var_100_1 = 0;\n                                    uint64_t var_108_1 = 0;\n                                    uint64_t var_118_1 = 0;\n                                    uint64_t var_128_1 = 0;\n                                    uint64_t var_e0;\n                                    ssize_t rax_24;\n                                    char* rax_93;\n                                    char rdx_5;\n                                    char* rbx_2;\n                                    char* rbx_5;\n                                    char* r8_3;\n                                    char* r8_5;\n                                    ssize_t r10_1;\n                                    char* r15_1;\n                                    int64_t temp1_1;\n                                    do\n                                    {\n                                        rax_24 = __getdelim(&var_f0, &var_e8, 0xa, r13_1);\n                                        if (rax_24 <= 0)\n                                        {\n                                            break;\n                                        }\n                                        r15_1 = var_f0;\n                                        rdx_5 = *r15_1;\n                                        if (rdx_5 != 0x23)\n                                        {\n                                            break;\n                                        }\n                                        while ((*r13_1 & 0x30) == 0)\n                                        {\n                                            int64_t rax_34;\n                                            int64_t rcx_8;\n                                            char rsi_4;\n                                            uint16_t* rdi_10;\n                                            do\n                                            {\n                                                temp1_1 = r12_1;\n                                                r12_1 = (r12_1 + 1);\n                                                if (temp1_1 != -1)\n                                                {\n                                                    break;\n                                                }\n                                                rbx_2 = sub_407290(0, 3, var_140);\n                                                rax_24 = error(1, 0, dcgettext(nullptr, \"%s: too many checksum lines\", 5), rbx_2);\n                                            label_4021ac:\n                                                rax_24 = *r8_3 == 0x5c;\n                                                if ((r10_1 - rbx_2) < (rax_24 + data_60e318))\n                                                {\n                                                    break;\n                                                }\n                                                data_60e310 = 0;\n                                                rsi_4 = 0;\n                                                rdi_10 = *__ctype_b_loc();\n                                                rax_34 = 0;\n                                            label_4021f3:\n                                                rcx_8 = (rax_34 + 1);\n                                                if ((*(&rdi_10[r8_3[rax_34]] + 1) & 0x10) != 0)\n                                                {\n                                                    break;\n                                                }\n                                                if (rsi_4 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                data_60e310 = rax_34;\n                                                if ((rax_34 - 2) > 0x7e)\n                                                {\n                                                    break;\n                                                }\n                                                if ((rax_34 & 1) != 0)\n                                                {\n                                                    break;\n                                                }\n                                                void* rbx_4 = &rbx_2[rax_34];\n                                                char* rax_35 = (r15_1 + rbx_4);\n                                                data_60e2f8 = (rax_34 << 2);\n                                                char rdx_13 = *rax_35;\n                                                if ((rdx_13 != 0x20 && rdx_13 != 9))\n                                                {\n                                                    break;\n                                                }\n                                                *rax_35 = 0;\n                                                if (sub_402f30(r8_3) == 0)\n                                                {\n                                                    break;\n                                                }\n                                                void* rax_37 = (rbx_4 + 1);\n                                                int32_t rcx_9 = data_60e230;\n                                                r8_5 = r8_3;\n                                                char rdx_17;\n                                                if ((r10_1 - rax_37) != 1)\n                                                {\n                                                    rdx_17 = *((r15_1 + rbx_4) + 1);\n                                                    if (((rdx_17 == 0x20 || rdx_17 == 0x2a) && rcx_9 != 1))\n                                                    {\n                                                        data_60e230 = 0;\n                                                        rax_37 = (rbx_4 + 2);\n                                                    }\n                                                }\n                                                if (((r10_1 - rax_37) == 1 || (((r10_1 - rax_37) != 1 && rdx_17 != 0x20) && rdx_17 != 0x2a)))\n                                                {\n                                                    if (rcx_9 == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    data_60e230 = 1;\n                                                }\n                                                rbx_5 = (r15_1 + rax_37);\n                                                if (var_150 != 0)\n                                                {\n                                                    var_150 = r8_5;\n                                                    r8_5 = var_150;\n                                                    rax_93 = sub_402f90(rbx_5, (r10_1 - rax_37)) != 0;\n                                                label_4029f4:\n                                                    if (rax_93 == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                                bool c_3 = false;\n                                                bool z_2 = (rax_22 & rax_22) == 0;\n                                                if (z_2)\n                                                {\n                                                    void* const rdi_12 = &data_40c522;\n                                                    int64_t rcx_10 = 2;\n                                                    char* rsi_5 = rbx_5;\n                                                label_4022d6:\n                                                    if (rcx_10 != 0)\n                                                    {\n                                                        char temp10_1 = *rsi_5;\n                                                        char temp11_1 = *rdi_12;\n                                                        c_3 = temp10_1 < temp11_1;\n                                                        z_2 = temp10_1 == temp11_1;\n                                                        if (z_2)\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    int32_t rax_38;\n                                                    rax_38 = ((!z_2) && (!c_3));\n                                                    rax_38 = (rax_38 - 0);\n                                                    if (rax_38 == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                                int32_t rbp_2 = 0;\n                                                if (data_60e308 == 0)\n                                                {\n                                                    var_150 = r8_5;\n                                                    r8_5 = var_150;\n                                                    rbp_2 = strchr(rbx_5, 0xa) != 0;\n                                                }\n                                                var_150 = r8_5;\n                                                char rax_40 = sub_4030d0(rbx_5, &var_88, &var_e0);\n                                                int64_t r8_6 = var_150;\n                                                char rcx_11 = rax_40;\n                                                char const* const rsi_8;\n                                                if (rax_40 == 0)\n                                                {\n                                                    var_118_1 = (var_118_1 + 1);\n                                                    if (data_60e308 == 0)\n                                                    {\n                                                        if (rbp_2 != 0)\n                                                        {\n                                                            uint64_t* const rdi_15 = stdout;\n                                                            char* rax_41 = stdout[5];\n                                                            if (rax_41 >= stdout[6])\n                                                            {\n                                                                __overflow(rdi_15, 0x5c);\n                                                            }\n                                                            else\n                                                            {\n                                                                stdout[5] = &rax_41[1];\n                                                                *rax_41 = 0x5c;\n                                                            }\n                                                        }\n                                                        sub_403020(rbx_5, rbp_2);\n                                                        rsi_8 = \"FAILED open or read\";\n                                                        goto label_402396;\n                                                    }\n                                                }\n                                                else if ((data_60e306 == 0 || (data_60e306 != 0 && var_e0 == 0)))\n                                                {\n                                                    var_150 = r8_6;\n                                                    char* rdx_24 = (data_60e310 >> 1);\n                                                    uint32_t rax_57;\n                                                    uint32_t rsi_10;\n                                                    int32_t* rdi_18;\n                                                    int64_t r8_8;\n                                                    if (rdx_24 == 0)\n                                                    {\n                                                        r15_1 = nullptr;\n                                                    }\n                                                    else\n                                                    {\n                                                        r15_1 = nullptr;\n                                                        char* var_138_1;\n                                                        var_138_1 = rcx_11;\n                                                        r8_8 = var_150;\n                                                        rcx_11 = var_138_1;\n                                                        rdi_18 = *__ctype_tolower_loc();\n                                                    label_402512:\n                                                        rax_57 = *(&var_88 + r15_1);\n                                                        rsi_10 = (rax_57 >> 4);\n                                                        if ((rdi_18[*(r8_8 + (r15_1 << 1))] != *\"0123456789abcdef\"[(rsi_10 & 0xf)] || (*(rdi_18 + (*(r8_8 + (r15_1 << 1)) << 2)) == *((rsi_10 & 0xf) + \"0123456789abcdef\") && rdi_18[*((r8_8 + (r15_1 << 1)) + 1)] != *\"0123456789abcdef\"[(rax_57 & 0xf)])))\n                                                        {\n                                                            var_108_1 = (var_108_1 + 1);\n                                                            if (data_60e308 == 0)\n                                                            {\n                                                                if (rbp_2 != 0)\n                                                                {\n                                                                    goto label_40254d;\n                                                                }\n                                                            label_402572:\n                                                                var_150 = rdx_24;\n                                                                sub_403020(rbx_5, rbp_2);\n                                                                if (var_150 != r15_1)\n                                                                {\n                                                                    rsi_8 = \"FAILED\";\n                                                                    goto label_402396;\n                                                                }\n                                                            }\n                                                        }\n                                                        if ((*(rdi_18 + (*(r8_8 + (r15_1 << 1)) << 2)) == *((rsi_10 & 0xf) + \"0123456789abcdef\") && *(rdi_18 + (*((r8_8 + (r15_1 << 1)) + 1) << 2)) == *((rax_57 & 0xf) + \"0123456789abcdef\")))\n                                                        {\n                                                            r15_1 = &r15_1[1];\n                                                            if (rdx_24 != r15_1)\n                                                            {\n                                                                break;\n                                                            }\n                                                            r15_1 = rdx_24;\n                                                        }\n                                                    }\n                                                    char rax_83;\n                                                    char rax_84;\n                                                    if ((rdx_24 == 0 || ((rdx_24 != 0 && *(rdi_18 + (*(r8_8 + (r15_1 << 1)) << 2)) == *((rsi_10 & 0xf) + \"0123456789abcdef\")) && *(rdi_18 + (*((r8_8 + (r15_1 << 1)) + 1) << 2)) == *((rax_57 & 0xf) + \"0123456789abcdef\"))))\n                                                    {\n                                                        rax_83 = data_60e308;\n                                                        var_fe_1 = rax_83;\n                                                        if (rax_83 == 0)\n                                                        {\n                                                            rax_84 = data_60e305;\n                                                            var_fe_1 = rax_84;\n                                                            if (rax_84 == 0)\n                                                            {\n                                                                if (rbp_2 != 0)\n                                                                {\n                                                                    var_fe_1 = rcx_11;\n                                                                label_40254d:\n                                                                    uint64_t* const rdi_19 = stdout;\n                                                                    char* rax_58 = stdout[5];\n                                                                    if (rax_58 >= stdout[6])\n                                                                    {\n                                                                        var_150 = rdx_24;\n                                                                        __overflow(rdi_19, 0x5c);\n                                                                        rdx_24 = var_150;\n                                                                    }\n                                                                    else\n                                                                    {\n                                                                        stdout[5] = &rax_58[1];\n                                                                        *rax_58 = 0x5c;\n                                                                    }\n                                                                    goto label_402572;\n                                                                }\n                                                                var_150 = rcx_11;\n                                                                sub_403020(rbx_5, 0);\n                                                                var_fe_1 = var_150;\n                                                            }\n                                                        }\n                                                    }\n                                                    if ((((((rdx_24 == 0 || ((rdx_24 != 0 && *(rdi_18 + (*(r8_8 + (r15_1 << 1)) << 2)) == *((rsi_10 & 0xf) + \"0123456789abcdef\")) && *(rdi_18 + (*((r8_8 + (r15_1 << 1)) + 1) << 2)) == *((rax_57 & 0xf) + \"0123456789abcdef\"))) && rax_83 == 0) && rax_84 == 0) || ((rdx_24 != 0 && (*(rdi_18 + (*(r8_8 + (r15_1 << 1)) << 2)) != *((rsi_10 & 0xf) + \"0123456789abcdef\") || (*(rdi_18 + (*(r8_8 + (r15_1 << 1)) << 2)) == *((rsi_10 & 0xf) + \"0123456789abcdef\") && *(rdi_18 + (*((r8_8 + (r15_1 << 1)) + 1) << 2)) != *((rax_57 & 0xf) + \"0123456789abcdef\")))) && data_60e308 == 0)) && data_60e305 == 0))\n                                                    {\n                                                        rsi_8 = &data_409ed0;\n                                                    label_402396:\n                                                        __printf_chk(1, \": %s\\n\", dcgettext(nullptr, rsi_8, 5));\n                                                    }\n                                                }\n                                                var_100_1 = r14;\n                                            } while ((*r13_1 & 0x30) == 0);\n                                            if (((temp1_1 == -1 && (r10_1 - rbx_2) >= (rax_24 + data_60e318)) && (*((rdi_10 + (r8_3[rax_34] << 1)) + 1) & 0x10) != 0))\n                                            {\n                                                rax_34 = rcx_8;\n                                                rsi_4 = r14;\n                                                goto label_4021f3;\n                                            }\n                                            if ((!(temp1_1 == -1 && (r10_1 - rbx_2) < (rax_24 + data_60e318))))\n                                            {\n                                                break;\n                                            }\n                                        label_402133:\n                                            var_128_1 = (var_128_1 + 1);\n                                            if (data_60e307 != 0)\n                                            {\n                                                error(0, 0, dcgettext(nullptr, \"%s: %lu: improperly formatted %s\u2026\", 5), sub_407290(0, 3, var_140), r12_1, \"BLAKE2\");\n                                            }\n                                        }\n                                        if ((*r13_1 & 0x30) != 0)\n                                        {\n                                            break;\n                                        }\n                                    } while (temp1_1 != -1);\n                                    if (rax_24 > 0)\n                                    {\n                                        r10_1 = rax_24;\n                                        if (r15_1[(rax_24 - 1)] == 0xa)\n                                        {\n                                            r10_1 = (r10_1 - 1);\n                                            r15_1[r10_1] = 0;\n                                            r15_1 = var_f0;\n                                            rdx_5 = *r15_1;\n                                        }\n                                        rbx_2 = nullptr;\n                                        if ((rdx_5 == 9 || rdx_5 == 0x20))\n                                        {\n                                            while (true)\n                                            {\n                                                rbx_2 = &rbx_2[1];\n                                                rdx_5 = *(r15_1 + rbx_2);\n                                                if (rdx_5 == 0x20)\n                                                {\n                                                    continue;\n                                                }\n                                                if ((rdx_5 != 0x20 && rdx_5 != 9))\n                                                {\n                                                    break;\n                                                }\n                                                if (rdx_5 != 9)\n                                                {\n                                                    /* nop */\n                                                }\n                                            }\n                                        }\n                                        var_150 = 0;\n                                        bool c_2 = rdx_5 < 0x5c;\n                                        bool z_1 = rdx_5 == 0x5c;\n                                        if (z_1)\n                                        {\n                                            var_150 = r14;\n                                            char* temp2_1 = rbx_2;\n                                            rbx_2 = &rbx_2[1];\n                                            c_2 = temp2_1 >= -1;\n                                            z_1 = temp2_1 == -1;\n                                        }\n                                        r8_3 = (r15_1 + rbx_2);\n                                        char const* const rdi_8 = \"BLAKE2\";\n                                        int64_t rcx_6 = 6;\n                                        char* rsi_3 = r8_3;\n                                        while (rcx_6 != 0)\n                                        {\n                                            char temp3_1 = *rsi_3;\n                                            char const temp4_1 = *rdi_8;\n                                            c_2 = temp3_1 < temp4_1;\n                                            z_1 = temp3_1 == temp4_1;\n                                            rsi_3 = &rsi_3[1];\n                                            rdi_8 = &rdi_8[1];\n                                            rcx_6 = (rcx_6 - 1);\n                                            if ((!z_1))\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        rax_24 = ((!z_1) && (!c_2));\n                                        rax_24 = (rax_24 - 0);\n                                        if (rax_24 != 0)\n                                        {\n                                            goto label_4021ac;\n                                        }\n                                        void* rbx_3 = &rbx_2[6];\n                                        char* r11_1 = (r15_1 + rbx_3);\n                                        char rbp_1 = *r11_1;\n                                        ssize_t r10_2;\n                                        if (rbp_1 != 0)\n                                        {\n                                            if ((rbp_1 != 9 && rbp_1 != 0x20))\n                                            {\n                                                while (rbp_1 != 0x2d)\n                                                {\n                                                    if (rbp_1 == 0x28)\n                                                    {\n                                                        break;\n                                                    }\n                                                    rbx_3 = (rbx_3 + 1);\n                                                    rbp_1 = *(r15_1 + rbx_3);\n                                                    r11_1 = (r15_1 + rbx_3);\n                                                    if (rbp_1 == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    if (rbp_1 == 0x20)\n                                                    {\n                                                        break;\n                                                    }\n                                                    if (rbp_1 == 9)\n                                                    {\n                                                        break;\n                                                    }\n                                                    if ((!(rbp_1 != 0x20 && rbp_1 != 9)))\n                                                    {\n                                                        /* nop */\n                                                    }\n                                                }\n                                            }\n                                            char* r11_2;\n                                            if (rbp_1 == 0x28)\n                                            {\n                                                *r11_1 = 0;\n                                                int64_t rax_60 = sub_4052d0(r8_3, &data_40aba0, 0, 0);\n                                                r11_2 = r11_1;\n                                                r10_2 = r10_1;\n                                                if (rax_60 < 0)\n                                                {\n                                                    goto label_402133;\n                                                }\n                                                data_60e300 = rax_60;\n                                            }\n                                            uint64_t rax_26;\n                                            if (((rbp_1 == 9 || rbp_1 == 0x20) || rbp_1 == 0x20))\n                                            {\n                                                *r11_1 = 0;\n                                                int64_t rax_59 = sub_4052d0(r8_3, &data_40aba0, 0, 0);\n                                                if (rax_59 < 0)\n                                                {\n                                                    goto label_402133;\n                                                }\n                                                data_60e300 = rax_59;\n                                                r11_2 = r11_1;\n                                                r10_2 = r10_1;\n                                                if (rbp_1 != 0x28)\n                                                {\n                                                    rbx_3 = (rbx_3 + 1);\n                                                label_4020f4:\n                                                    r11_2 = (r15_1 + rbx_3);\n                                                    if (rbp_1 != 0x2d)\n                                                    {\n                                                        goto label_402102;\n                                                    }\n                                                    if (sub_407d70(r11_2, nullptr, 0, &var_e0, nullptr) != 0)\n                                                    {\n                                                        goto label_402133;\n                                                    }\n                                                    uint64_t rax_67 = var_e0;\n                                                    if ((rax_67 - 1) > 0x1ff)\n                                                    {\n                                                        goto label_402133;\n                                                    }\n                                                    if ((rax_67 & 7) != 0)\n                                                    {\n                                                        goto label_402133;\n                                                    }\n                                                    data_60e2f8 = rax_67;\n                                                    while ((*(r15_1 + rbx_3) - 0x30) <= 9)\n                                                    {\n                                                        rbx_3 = (rbx_3 + 1);\n                                                        r11_2 = (r15_1 + rbx_3);\n                                                    }\n                                                    rax_26 = (rax_67 >> 2);\n                                                    goto label_402112;\n                                                }\n                                            }\n                                            if ((((rbp_1 == 0x28 || rbp_1 == 9) || rbp_1 == 0x20) || rbp_1 == 0x20))\n                                            {\n                                                *r11_2 = 0x28;\n                                            label_402102:\n                                                data_60e2f8 = 0x200;\n                                                rax_26 = 0x80;\n                                            label_402112:\n                                                data_60e310 = rax_26;\n                                                char rax_27 = *r11_2;\n                                                if (rax_27 == 0x20)\n                                                {\n                                                    rax_27 = *((r15_1 + rbx_3) + 1);\n                                                    rbx_3 = (rbx_3 + 1);\n                                                }\n                                                if (rax_27 != 0x28)\n                                                {\n                                                    goto label_402133;\n                                                }\n                                                void* rbx_9 = (rbx_3 + 1);\n                                                void* r10_5 = (r10_2 - rbx_9);\n                                                if (r10_2 == rbx_9)\n                                                {\n                                                    goto label_402133;\n                                                }\n                                                rbx_5 = (rbx_9 + r15_1);\n                                                void* r11_4 = (r10_5 - 1);\n                                                char* r10_6;\n                                                void* temp9_1;\n                                                if (r10_5 != 1)\n                                                {\n                                                    if (*((rbx_5 + r10_5) - 1) != 0x29)\n                                                    {\n                                                        do\n                                                        {\n                                                            temp9_1 = r11_4;\n                                                            r11_4 = (r11_4 - 1);\n                                                            if (temp9_1 == 1)\n                                                            {\n                                                                break;\n                                                            }\n                                                        } while (*(rbx_5 + r11_4) != 0x29);\n                                                    }\n                                                    if ((*((rbx_5 + r10_5) - 1) == 0x29 || (*((rbx_5 + r10_5) - 1) != 0x29 && temp9_1 != 1)))\n                                                    {\n                                                        r10_6 = (rbx_5 + r11_4);\n                                                    }\n                                                }\n                                                if (((r10_5 == 1 || ((r10_5 != 1 && *((rbx_5 + r10_5) - 1) != 0x29) && temp9_1 == 1)) && *rbx_5 == 0x29))\n                                                {\n                                                    r10_6 = rbx_5;\n                                                    r11_4 = nullptr;\n                                                }\n                                                if ((((r10_5 == 1 || ((r10_5 != 1 && *((rbx_5 + r10_5) - 1) != 0x29) && temp9_1 == 1)) && *rbx_5 == 0x29) || (r10_5 != 1 && (*((rbx_5 + r10_5) - 1) == 0x29 || (*((rbx_5 + r10_5) - 1) != 0x29 && temp9_1 != 1)))))\n                                                {\n                                                    if (var_150 == 0)\n                                                    {\n                                                    label_40298e:\n                                                        *r10_6 = 0;\n                                                        char rdx_40 = *((rbx_5 + r11_4) + 1);\n                                                        void* rax_91 = (r11_4 + 1);\n                                                        if ((rdx_40 == 9 || rdx_40 == 0x20))\n                                                        {\n                                                            while (true)\n                                                            {\n                                                                rax_91 = (rax_91 + 1);\n                                                                rdx_40 = *(rbx_5 + rax_91);\n                                                                if (rdx_40 == 0x20)\n                                                                {\n                                                                    continue;\n                                                                }\n                                                                if ((rdx_40 != 0x20 && rdx_40 != 9))\n                                                                {\n                                                                    break;\n                                                                }\n                                                                if (rdx_40 != 9)\n                                                                {\n                                                                    /* nop */\n                                                                }\n                                                            }\n                                                        }\n                                                        if (rdx_40 != 0x3d)\n                                                        {\n                                                            goto label_402133;\n                                                        }\n                                                        char* rdx_41 = ((rbx_5 + rax_91) + 1);\n                                                        char* r8_9;\n                                                        while (true)\n                                                        {\n                                                            char rax_92 = *rdx_41;\n                                                            r8_9 = rdx_41;\n                                                            rdx_41 = &rdx_41[1];\n                                                            if (rax_92 == 0x20)\n                                                            {\n                                                                continue;\n                                                            }\n                                                            if ((rax_92 != 0x20 && rax_92 != 9))\n                                                            {\n                                                                break;\n                                                            }\n                                                            if (rax_92 != 9)\n                                                            {\n                                                                /* nop */\n                                                            }\n                                                        }\n                                                        var_150 = r8_9;\n                                                        rax_93 = sub_402f30(r8_9);\n                                                        r8_5 = var_150;\n                                                        goto label_4029f4;\n                                                    }\n                                                    if (sub_402f90(rbx_5, r11_4) == 0)\n                                                    {\n                                                        goto label_402133;\n                                                    }\n                                                    goto label_40298e;\n                                                }\n                                                if (((r10_5 == 1 || ((r10_5 != 1 && *((rbx_5 + r10_5) - 1) != 0x29) && temp9_1 == 1)) && *rbx_5 != 0x29))\n                                                {\n                                                    goto label_402133;\n                                                }\n                                            }\n                                        }\n                                        *r11_1 = 0;\n                                        int64_t rax_25 = sub_4052d0(r8_3, &data_40aba0, 0, 0);\n                                        r10_2 = r10_1;\n                                        if (rax_25 < 0)\n                                        {\n                                            goto label_402133;\n                                        }\n                                        data_60e300 = rax_25;\n                                        rbx_3 = (rbx_3 + 1);\n                                        goto label_4020f4;\n                                    }\n                                    free(var_f0);\n                                    uint32_t rbx_7 = (*r13_1 & 0x20);\n                                    if (rbx_7 != 0)\n                                    {\n                                        error(0, 0, dcgettext(nullptr, \"%s: read error\", 5), sub_407290(0, 3, var_140));\n                                        rax_50 = 0;\n                                        goto label_40244a;\n                                    }\n                                    if ((rax_22 != 0 && sub_4085e0(r13_1) != 0))\n                                    {\n                                        goto label_402774;\n                                    }\n                                    if (var_100_1 == 0)\n                                    {\n                                        error(0, 0, dcgettext(nullptr, \"%s: no properly formatted %s che\u2026\", 5), sub_407290(0, 3, var_140), \"BLAKE2\");\n                                    label_402447:\n                                        rax_50 = (rbx_7 & 1);\n                                        goto label_40244a;\n                                    }\n                                    if (data_60e308 == 0)\n                                    {\n                                        if (var_128_1 != 0)\n                                        {\n                                            error(0, 0, dcngettext(nullptr, \"WARNING: %lu line is improperly \u2026\", \"WARNING: %lu lines are improperl\u2026\", var_128_1, 5), var_128_1);\n                                        }\n                                        if (var_118_1 != 0)\n                                        {\n                                            error(0, 0, dcngettext(nullptr, \"WARNING: %lu listed file could n\u2026\", \"WARNING: %lu listed files could \u2026\", var_118_1, 5), var_118_1);\n                                        }\n                                        if (var_108_1 != 0)\n                                        {\n                                            error(0, 0, dcngettext(nullptr, \"WARNING: %lu computed checksum d\u2026\", \"WARNING: %lu computed checksums \u2026\", var_108_1, 5), var_108_1);\n                                        }\n                                        if ((data_60e306 != 0 && var_fe_1 == 0))\n                                        {\n                                            error(0, 0, dcgettext(nullptr, \"%s: no file was verified\", 5), sub_407290(0, 3, var_140));\n                                        }\n                                    }\n                                    if (((((data_60e308 != 0 || (data_60e308 == 0 && data_60e306 == 0)) && var_fe_1 != 0) || ((data_60e308 == 0 && data_60e306 != 0) && var_fe_1 != 0)) && (var_118_1 | var_108_1) == 0))\n                                    {\n                                        rbx_7 = var_128_1 == 0;\n                                        rbx_7 = ((data_60e304 ^ 1) | rbx_7);\n                                    }\n                                    goto label_402447;\n                                }\n                            }\n                            else\n                            {\n                                rax_61 = sub_4030d0(var_140, &var_d8, &var_88);\n                                if (rax_61 != 0)\n                                {\n                                    break;\n                                }\n                                var_ff = 0;\n                            }\n                        label_402648:\n                            var_148 = (var_148 + 8);\n                        } while (var_110 > var_148);\n                        if ((!(r14 == 0 && rax_61 != 0)))\n                        {\n                            goto label_40265e;\n                        }\n                        if (strchr(var_140, 0x5c) == 0)\n                        {\n                            goto label_402af9;\n                        }\n                        goto label_4027c3;\n                    }\n                label_401eb1:\n                    if (data_60e307 != 0)\n                    {\n                        rsi_1 = \"the --warn option is meaningful \u2026\";\n                        if (r14 == 0)\n                        {\n                            goto label_401e6a;\n                        }\n                        goto label_401ecd;\n                    }\n                    if (data_60e305 == 1)\n                    {\n                        rsi_1 = \"the --quiet option is meaningful\u2026\";\n                        if (r14 == 0)\n                        {\n                            goto label_401e6a;\n                        }\n                    }\n                    goto label_401e3e;\n                }\n                if (r14 == 0)\n                {\n                    goto label_402dcc;\n                }\n                goto label_401e31;\n            }\n        label_402dbd:\n            rsi_1 = \"--tag does not support --text mo\u2026\";\n        label_401e6a:\n            error(0, 0, dcgettext(nullptr, rsi_1, 5));\n            break;\n        }\n        bool cond:0_1 = rax_1 <= 0x74;\n        if (rax_1 == 0x74)\n        {\n            rbx = 0;\n        }\n        else\n        {\n            if (cond:0_1)\n            {\n                bool cond:1_1 = rax_1 <= 0x62;\n                if (rax_1 != 0x62)\n                {\n                    if ((!cond:1_1))\n                    {\n                        if (rax_1 == 0x63)\n                        {\n                            r14 = 1;\n                            continue;\n                        }\n                        else\n                        {\n                            if (rax_1 != 0x6c)\n                            {\n                                break;\n                            }\n                            int64_t rax_3 = sub_407d40(data_60e4c0, 0, -1, &data_40c524[0x1b], dcgettext(nullptr, \"invalid length\", 5), 0);\n                            r13 = data_60e4c0;\n                            data_60e2f8 = rax_3;\n                            if ((rax_3 & 7) == 0)\n                            {\n                                continue;\n                            }\n                            else\n                            {\n                                error(0, 0, dcgettext(nullptr, \"invalid length: %s\", 5), sub_407410(r13));\n                                rax_1 = error(1, 0, dcgettext(nullptr, \"length is not a multiple of 8\", 5));\n                            }\n                        }\n                    }\n                    if (rax_1 == 0xffffff7d)\n                    {\n                        int64_t var_168 = 0;\n                        sub_4078a0(stdout, \"b2sum\", \"GNU coreutils\", data_60e240);\n                        exit(0);\n                        /* no return */\n                    }\n                    if (rax_1 == 0xffffff7e)\n                    {\n                        sub_403280(0);\n                        /* no return */\n                    }\n                    break;\n                }\n            }\n            else\n            {\n                bool cond:2_1 = rax_1 <= 0x81;\n                if (rax_1 == 0x81)\n                {\n                    data_60e308 = 1;\n                    data_60e307 = 0;\n                    data_60e305 = 0;\n                    continue;\n                }\n                else if ((!cond:2_1))\n                {\n                    bool cond:4_1 = rax_1 >= 0x83;\n                    if (rax_1 == 0x83)\n                    {\n                        data_60e304 = 1;\n                        continue;\n                    }\n                    else if ((!cond:4_1))\n                    {\n                        data_60e308 = 0;\n                        data_60e307 = 0;\n                        data_60e305 = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if (rax_1 != 0x84)\n                        {\n                            break;\n                        }\n                        var_11d = 1;\n                    }\n                }\n                else if (rax_1 == 0x77)\n                {\n                    data_60e308 = 0;\n                    data_60e307 = 1;\n                    data_60e305 = 0;\n                    continue;\n                }\n                else\n                {\n                    if (rax_1 != 0x80)\n                    {\n                        break;\n                    }\n                    data_60e306 = 1;\n                    continue;\n                }\n            }\n            rbx = 1;\n        }\n    }\n    sub_403280(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x402e50",
            "funcEndAddr": "0x402e7a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402e7b",
            "funcStartAddr": "0x402e7b",
            "funcEndAddr": "0x402e9a",
            "decompiledFuncCode": "void sub_402e7b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_402e9a",
            "funcStartAddr": "0x402e9a",
            "funcEndAddr": "0x402ed1",
            "decompiledFuncCode": "int64_t sub_402e9a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402ed1",
            "funcStartAddr": "0x402ed1",
            "funcEndAddr": "0x402f28",
            "decompiledFuncCode": "void sub_402ed1()\n{\n    if (data_60e2e8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60e2f0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60e2f0 = (rax_1 + 1);\n        *(0x60de40 + ((rax_1 + 1) << 3))();\n    }\n    sub_402e7b();\n    data_60e2e8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402f28",
            "funcStartAddr": "0x402f28",
            "funcEndAddr": "0x402f2d",
            "decompiledFuncCode": "int64_t j_sub_402e9a()\n{\n    /* tailcall */\n    return sub_402e9a();\n}\n\n"
        },
        {
            "funcName": "sub_402f30",
            "funcStartAddr": "0x402f30",
            "funcEndAddr": "0x402f8d",
            "decompiledFuncCode": "uint64_t sub_402f30(char* arg1)\n{\n    char* rbx = arg1;\n    int64_t rbp = data_60e310;\n    uint64_t rax;\n    if (rbp != 0)\n    {\n        uint16_t* rcx_1 = *__ctype_b_loc();\n        rax = 0;\n        uint64_t rdx_1;\n        do\n        {\n            if ((*(&rcx_1[*rbx] + 1) & 0x10) == 0)\n            {\n                return 0;\n            }\n            rdx_1 = (rax + 1);\n            rbx = &rbx[1];\n            rax = rdx_1;\n        } while (rdx_1 < rbp);\n    }\n    rax = *rbx == 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402f90",
            "funcStartAddr": "0x402f90",
            "funcEndAddr": "0x403011",
            "decompiledFuncCode": "char* sub_402f90(char* arg1, void* arg2)\n{\n    void* rax = &arg1[1];\n    int64_t rdx = 0;\n    void* r8 = (arg2 - 1);\n    if (arg2 != 0)\n    {\n        char* r9_1;\n        while (true)\n        {\n            char rcx_1 = arg1[rdx];\n            if (rcx_1 != 0)\n            {\n                char rcx_2;\n                if (rcx_1 != 0x5c)\n                {\n                    *(rax - 1) = rcx_1;\n                    r9_1 = rax;\n                }\n                else if (r8 != rdx)\n                {\n                    rdx = (rdx + 1);\n                    rcx_2 = arg1[rdx];\n                    if (rcx_2 == 0x5c)\n                    {\n                        r9_1 = rax;\n                        *(rax - 1) = 0x5c;\n                    }\n                    if (rcx_2 == 0x6e)\n                    {\n                        r9_1 = rax;\n                        *(rax - 1) = 0xa;\n                    }\n                }\n                if (((rcx_1 != 0x5c || ((rcx_1 == 0x5c && r8 != rdx) && rcx_2 == 0x5c)) || ((rcx_1 == 0x5c && r8 != rdx) && rcx_2 == 0x6e)))\n                {\n                    rdx = (rdx + 1);\n                    rax = (rax + 1);\n                    if (arg2 <= rdx)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            return 0;\n        }\n        if (r9_1 < (arg2 + arg1))\n        {\n            *r9_1 = 0;\n        }\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403020",
            "funcStartAddr": "0x403020",
            "funcEndAddr": "0x4030c5",
            "decompiledFuncCode": "void sub_403020(char* arg1, char arg2)\n{\n    char* rbx = arg1;\n    if (arg2 == 0)\n    {\n        /* tailcall */\n        return fputs_unlocked(arg1, stdout);\n    }\n    while (true)\n    {\n        uint32_t rsi = *rbx;\n        if (rsi == 0)\n        {\n            break;\n        }\n        FILE* rcx_1 = stdout;\n        if (rsi == 0xa)\n        {\n            fwrite_unlocked(&data_409d84, 1, 2, rcx_1);\n        }\n        else if (rsi == 0x5c)\n        {\n            fwrite_unlocked(&data_409d87, 1, 2, rcx_1);\n        }\n        else\n        {\n            char* rax = stdout[5];\n            if (rax >= stdout[6])\n            {\n                __overflow(stdout, rsi);\n            }\n            else\n            {\n                stdout[5] = &rax[1];\n                *rax = rsi;\n            }\n        }\n        rbx = &rbx[1];\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4030d0",
            "funcStartAddr": "0x4030d0",
            "funcEndAddr": "0x403272",
            "decompiledFuncCode": "uint64_t sub_4030d0(char* arg1, int64_t arg2, char* arg3)\n{\n    int64_t rcx = 2;\n    void* const rdi = &data_40c522;\n    char* rsi = arg1;\n    int64_t __saved_rbx;\n    bool c = &__saved_rbx < 8;\n    bool z = &__saved_rbx == 8;\n    while (rcx != 0)\n    {\n        char temp1_1 = *rsi;\n        char temp2_1 = *rdi;\n        c = temp1_1 < temp2_1;\n        z = temp1_1 == temp2_1;\n        rsi = &rsi[1];\n        rdi = (rdi + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    *arg3 = 0;\n    int32_t rax_1;\n    uint64_t* rax_3;\n    int32_t rax_4;\n    int32_t rax_5;\n    uint64_t* const rbx;\n    uint32_t r12_1;\n    if ((((!z) && (!c)) - 0) != 0)\n    {\n        rax_3 = sub_405750(arg1, \"r\");\n        rbx = rax_3;\n        if (rax_3 != 0)\n        {\n            sub_405720(rax_3, 2);\n            rax_4 = sub_4051d0(rbx, arg2, (data_60e2f8 >> 3));\n            if (rax_4 == 0)\n            {\n                rax_5 = sub_4085e0(rbx);\n                if (rax_5 != 0)\n                {\n                    r12_1 = 0;\n                    error(0, *__errno_location(), \"%s\", sub_407290(0, 3, arg1));\n                }\n            }\n        }\n        else\n        {\n            int32_t* rax_12 = __errno_location();\n            r12_1 = data_60e306;\n            if ((r12_1 == 0 || (r12_1 != 0 && *rax_12 != 2)))\n            {\n                r12_1 = 0;\n                error(0, *rax_12, \"%s\", sub_407290(0, 3, arg1));\n            }\n            if ((r12_1 != 0 && *rax_12 == 2))\n            {\n                *arg3 = 1;\n            }\n        }\n    }\n    else\n    {\n        rbx = stdin;\n        data_60e320 = 1;\n        sub_405720(stdin, 2);\n        rax_1 = sub_4051d0(stdin, arg2, (data_60e2f8 >> 3));\n    }\n    if ((((((!z) && (!c)) - 0) == 0 && rax_1 != 0) || (((((!z) && (!c)) - 0) != 0 && rax_3 != 0) && rax_4 != 0)))\n    {\n        r12_1 = 0;\n        error(0, *__errno_location(), \"%s\", sub_407290(0, 3, arg1));\n        if (stdin != rbx)\n        {\n            sub_4085e0(rbx);\n        }\n    }\n    if ((((((!z) && (!c)) - 0) == 0 && rax_1 == 0) || ((((((!z) && (!c)) - 0) != 0 && rax_3 != 0) && rax_4 == 0) && rax_5 == 0)))\n    {\n        r12_1 = 1;\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_403280",
            "funcStartAddr": "0x403280",
            "funcEndAddr": "0x403675",
            "decompiledFuncCode": "int64_t sub_403280(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60e338;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\u2026\", 5), rbp, \"BLAKE2\", 0x200);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  -b, --binary         read in\u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"  -c, --check          read %s s\u2026\", 5), \"BLAKE2\");\n        fputs_unlocked(dcgettext(nullptr, \"  -l, --length         digest le\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --tag            create a \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -t, --text           read in t\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThe following five options are\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"\\nThe sums are computed as descr\u2026\", 5), \"RFC 7693\");\n        void* const var_88 = &data_409da0;\n        void* const* rax_16 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_16 = &rax_16[2];\n            void* const rdi_10 = *rax_16;\n            c_1 = false;\n            z_1 = (rdi_10 & rdi_10) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_12 = \"b2sum\";\n            int64_t rcx_2 = 6;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_12;\n                char temp1_1 = *rdi_10;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_12 = (rsi_12 + 1);\n                rdi_10 = (rdi_10 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_16[1];\n        char* rax_27;\n        int32_t rax_28;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_27 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_27 != 0)\n            {\n                rax_28 = strncmp(rax_27, &data_409e24, 3);\n                if (rax_28 != 0)\n                {\n                    rbp_1 = \"b2sum\";\n                }\n            }\n            if ((rax_27 == 0 || (rax_27 != 0 && rax_28 == 0)))\n            {\n                rbp_1 = \"b2sum\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"b2sum\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_19 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_19 == 0)\n            {\n                goto label_403568;\n            }\n            if (strncmp(rax_19, &data_409e24, 3) == 0)\n            {\n                goto label_403568;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_27 != 0) && rax_28 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"b2sum\");\n        label_403568:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"b2sum\");\n            if (rbp_1 != \"b2sum\")\n            {\n                r12_1 = &data_40c524[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403680",
            "funcStartAddr": "0x403680",
            "funcEndAddr": "0x404c1d",
            "decompiledFuncCode": "int64_t sub_403680(void* arg1, int64_t arg2)\n{\n    int64_t rax = 0;\n    int64_t var_138;\n    do\n    {\n        &var_138[rax] = *(arg2 + (rax << 3));\n        rax = (rax + 1);\n    } while (rax != 0x10);\n    int64_t rax_1 = 0;\n    int64_t var_b8;\n    do\n    {\n        &var_b8[rax_1] = *(arg1 + (rax_1 << 3));\n        rax_1 = (rax_1 + 1);\n    } while (rax_1 != 8);\n    int64_t var_98;\n    int64_t rbp_2 = ((var_b8 + var_98) + var_138);\n    int64_t var_128;\n    int64_t var_b0;\n    int64_t var_90;\n    int64_t rbx_2 = ((var_b0 + var_90) + var_128);\n    int64_t r9_3 = (ROLQ(((*(arg1 + 0x40) ^ rbp_2) ^ 0x510e527fade682d1), 0x20));\n    int64_t var_118;\n    int64_t var_a8;\n    int64_t var_88;\n    int64_t r11_2 = ((var_a8 + var_88) + var_118);\n    int64_t r8_3 = (ROLQ(((*(arg1 + 0x48) ^ rbx_2) ^ 0x9b05688c2b3e6c1f), 0x20));\n    int64_t r13_2 = (RORQ((var_98 ^ (0x6a09e667f3bcc908 + r9_3)), 0x18));\n    int64_t var_130;\n    int64_t rbp_4 = ((rbp_2 + var_130) + r13_2);\n    int64_t rcx_2 = (RORQ((var_90 ^ (-0x4498517a7b3558c5 + r8_3)), 0x18));\n    int64_t var_120;\n    int64_t rbx_4 = ((rbx_2 + var_120) + rcx_2);\n    int64_t r9_5 = (RORQ((r9_3 ^ rbp_4), 0x10));\n    int64_t r14_1 = ((0x6a09e667f3bcc908 + r9_3) + r9_5);\n    int64_t r8_5 = (RORQ((r8_3 ^ rbx_4), 0x10));\n    int64_t rax_2 = ((-0x4498517a7b3558c5 + r8_3) + r8_5);\n    int64_t r13_4 = (ROLQ((r13_2 ^ r14_1), 1));\n    int64_t rcx_4 = (ROLQ((rcx_2 ^ rax_2), 1));\n    int64_t rsi_3 = (ROLQ(((*(arg1 + 0x50) ^ r11_2) ^ 0x1f83d9abfb41bd6b), 0x20));\n    int64_t var_108;\n    int64_t var_a0;\n    int64_t var_80;\n    int64_t r10_2 = ((var_a0 + var_80) + var_108);\n    int64_t var_f8;\n    int64_t rbp_6 = ((rbp_4 + var_f8) + rcx_4);\n    int64_t rdx_5 = (RORQ((var_88 ^ (0x3c6ef372fe94f82b + rsi_3)), 0x18));\n    int64_t var_110;\n    int64_t r11_4 = ((r11_2 + var_110) + rdx_5);\n    int64_t r13_7 = (ROLQ(((*(arg1 + 0x58) ^ r10_2) ^ 0x5be0cd19137e2179), 0x20));\n    int64_t rsi_5 = (RORQ((rsi_3 ^ r11_4), 0x10));\n    int64_t r12_1 = ((0x3c6ef372fe94f82b + rsi_3) + rsi_5);\n    int64_t rax_5 = (RORQ((var_80 ^ (-0x5ab00ac5a0e2c90f + r13_7)), 0x18));\n    int64_t var_100;\n    int64_t r10_4 = ((r10_2 + var_100) + rax_5);\n    int64_t rdx_7 = (ROLQ((rdx_5 ^ r12_1), 1));\n    int64_t r13_9 = (RORQ((r13_7 ^ r10_4), 0x10));\n    int64_t r15_4 = ((-0x5ab00ac5a0e2c90f + r13_7) + r13_9);\n    int64_t r13_11 = (ROLQ((r13_9 ^ rbp_6), 0x20));\n    int64_t r12_2 = (r12_1 + r13_11);\n    int64_t rax_7 = (ROLQ((rax_5 ^ r15_4), 1));\n    int64_t rcx_6 = (RORQ((rcx_4 ^ r12_2), 0x18));\n    int64_t var_e8;\n    int64_t rbx_6 = ((rbx_4 + var_e8) + rdx_7);\n    int64_t var_f0;\n    int64_t rbp_8 = ((rbp_6 + var_f0) + rcx_6);\n    int64_t var_d8;\n    int64_t r11_6 = ((r11_4 + var_d8) + rax_7);\n    int64_t r9_7 = (ROLQ((r9_5 ^ rbx_6), 0x20));\n    int64_t r13_13 = (RORQ((r13_11 ^ rbp_8), 0x10));\n    int64_t r8_7 = (ROLQ((r8_5 ^ r11_6), 0x20));\n    int64_t r12_3 = (r12_2 + r13_13);\n    int64_t r13_14 = (r15_4 + r9_7);\n    int64_t r14_2 = (r14_1 + r8_7);\n    int64_t rdx_9 = (RORQ((rdx_7 ^ r13_14), 0x18));\n    int64_t rax_9 = (RORQ((rax_7 ^ r14_2), 0x18));\n    int64_t var_e0;\n    int64_t rbx_8 = ((rbx_6 + var_e0) + rdx_9);\n    int64_t var_d0;\n    int64_t r11_8 = ((r11_6 + var_d0) + rax_9);\n    int64_t rcx_8 = (ROLQ((rcx_6 ^ r12_3), 1));\n    int64_t r9_9 = (RORQ((r9_7 ^ rbx_8), 0x10));\n    int64_t r8_9 = (RORQ((r8_7 ^ r11_8), 0x10));\n    int64_t r15_5 = (r13_14 + r9_9);\n    int64_t rdx_11 = (ROLQ((rdx_9 ^ r15_5), 1));\n    int64_t r14_3 = (r14_2 + r8_9);\n    int64_t var_c8;\n    int64_t r10_6 = ((r10_4 + var_c8) + r13_4);\n    int64_t rax_11 = (ROLQ((rax_9 ^ r14_3), 1));\n    int64_t rsi_7 = (ROLQ((rsi_5 ^ r10_6), 0x20));\n    int64_t r15_7 = (rax_2 + rsi_7);\n    int64_t r13_17 = (RORQ((r13_4 ^ r15_7), 0x18));\n    int64_t var_c0;\n    int64_t r10_8 = ((r10_6 + var_c0) + r13_17);\n    int64_t rsi_9 = (RORQ((rsi_7 ^ r10_8), 0x10));\n    int64_t r15_8 = (r15_7 + rsi_9);\n    int64_t r13_19 = (ROLQ((r13_17 ^ r15_8), 1));\n    int64_t rbp_10 = ((rbp_8 + var_c8) + r13_19);\n    int64_t r9_11 = (ROLQ((r9_9 ^ rbp_10), 0x20));\n    int64_t r14_4 = (r14_3 + r9_11);\n    int64_t r13_21 = (RORQ((r13_19 ^ r14_4), 0x18));\n    int64_t rbp_12 = ((rbp_10 + var_e8) + r13_21);\n    int64_t r9_13 = (RORQ((r9_11 ^ rbp_12), 0x10));\n    int64_t r14_5 = (r14_4 + r9_13);\n    int64_t r13_23 = (ROLQ((r13_21 ^ r14_5), 1));\n    int64_t rbx_10 = ((rbx_8 + var_118) + rcx_8);\n    int64_t r11_10 = ((r11_8 + var_f0) + rdx_11);\n    int64_t r8_11 = (ROLQ((r8_9 ^ rbx_10), 0x20));\n    int64_t r10_10 = ((r10_8 + var_d0) + rax_11);\n    int64_t r15_9 = (r15_8 + r8_11);\n    int64_t rsi_11 = (ROLQ((rsi_9 ^ r11_10), 0x20));\n    int64_t r12_4 = (r12_3 + rsi_11);\n    int64_t rcx_10 = (RORQ((rcx_8 ^ r15_9), 0x18));\n    int64_t rdx_13 = (RORQ((rdx_11 ^ r12_4), 0x18));\n    int64_t rbx_12 = ((rbx_10 + var_f8) + rcx_10);\n    int64_t r13_26 = (ROLQ((r13_13 ^ r10_10), 0x20));\n    int64_t r11_12 = ((r11_10 + var_c0) + rdx_13);\n    int64_t r8_13 = (RORQ((r8_11 ^ rbx_12), 0x10));\n    int64_t r15_10 = (r15_9 + r8_13);\n    int64_t rsi_13 = (RORQ((rsi_11 ^ r11_12), 0x10));\n    int64_t r12_5 = (r12_4 + rsi_13);\n    int64_t rcx_12 = (ROLQ((rcx_10 ^ r15_10), 1));\n    int64_t r15_12 = (r15_5 + r13_26);\n    int64_t rdx_15 = (ROLQ((rdx_13 ^ r12_5), 1));\n    int64_t rax_13 = (RORQ((rax_11 ^ r15_12), 0x18));\n    int64_t rbp_14 = ((rbp_12 + var_130) + rcx_12);\n    int64_t r10_12 = ((r10_10 + var_108) + rax_13);\n    int64_t rbx_14 = ((rbx_12 + var_138) + rdx_15);\n    int64_t r13_28 = (RORQ((r13_26 ^ r10_12), 0x10));\n    int64_t r9_15 = (ROLQ((r9_13 ^ rbx_14), 0x20));\n    int64_t r15_13 = (r15_12 + r13_28);\n    int64_t r13_30 = (ROLQ((r13_28 ^ rbp_14), 0x20));\n    int64_t r15_14 = (r15_13 + r9_15);\n    int64_t r12_6 = (r12_5 + r13_30);\n    int64_t rax_15 = (ROLQ((rax_13 ^ r15_13), 1));\n    int64_t rdx_17 = (RORQ((rdx_15 ^ r15_14), 0x18));\n    int64_t rcx_14 = (RORQ((rcx_12 ^ r12_6), 0x18));\n    int64_t rbx_16 = ((rbx_14 + var_128) + rdx_17);\n    int64_t rbp_16 = ((rbp_14 + var_d8) + rcx_14);\n    int64_t r13_32 = (RORQ((r13_30 ^ rbp_16), 0x10));\n    int64_t r12_7 = (r12_6 + r13_32);\n    int64_t rcx_16 = (ROLQ((rcx_14 ^ r12_7), 1));\n    int64_t r9_17 = (RORQ((r9_15 ^ rbx_16), 0x10));\n    int64_t r11_14 = ((r11_12 + var_e0) + rax_15);\n    int64_t r10_14 = ((r10_12 + var_110) + r13_23);\n    int64_t r15_15 = (r15_14 + r9_17);\n    int64_t r8_15 = (ROLQ((r8_13 ^ r11_14), 0x20));\n    int64_t rsi_15 = (ROLQ((rsi_13 ^ r10_14), 0x20));\n    int64_t r14_6 = (r14_5 + r8_15);\n    int64_t rdx_19 = (ROLQ((rdx_17 ^ r15_15), 1));\n    int64_t r15_17 = (r15_10 + rsi_15);\n    int64_t rax_17 = (RORQ((rax_15 ^ r14_6), 0x18));\n    int64_t r11_16 = ((r11_14 + var_100) + rax_17);\n    int64_t r13_35 = (RORQ((r13_23 ^ r15_17), 0x18));\n    int64_t r10_16 = ((r10_14 + var_120) + r13_35);\n    int64_t r8_17 = (RORQ((r8_15 ^ r11_16), 0x10));\n    int64_t r14_7 = (r14_6 + r8_17);\n    int64_t rsi_17 = (RORQ((rsi_15 ^ r10_16), 0x10));\n    int64_t r15_18 = (r15_17 + rsi_17);\n    int64_t rax_19 = (ROLQ((rax_17 ^ r14_7), 1));\n    int64_t r13_37 = (ROLQ((r13_35 ^ r15_18), 1));\n    int64_t rbp_18 = ((rbp_16 + var_e0) + r13_37);\n    int64_t rbx_18 = ((rbx_16 + var_d8) + rcx_16);\n    int64_t r9_19 = (ROLQ((r9_17 ^ rbp_18), 0x20));\n    int64_t r8_19 = (ROLQ((r8_17 ^ rbx_18), 0x20));\n    int64_t r14_8 = (r14_7 + r9_19);\n    int64_t r15_19 = (r15_18 + r8_19);\n    int64_t r13_39 = (RORQ((r13_37 ^ r14_8), 0x18));\n    int64_t rcx_18 = (RORQ((rcx_16 ^ r15_19), 0x18));\n    int64_t rbp_20 = ((rbp_18 + var_f8) + r13_39);\n    int64_t rbx_20 = ((rbx_18 + var_138) + rcx_18);\n    int64_t r9_21 = (RORQ((r9_19 ^ rbp_20), 0x10));\n    int64_t r8_21 = (RORQ((r8_19 ^ rbx_20), 0x10));\n    int64_t r14_9 = (r14_8 + r9_21);\n    int64_t r15_20 = (r15_19 + r8_21);\n    int64_t r13_41 = (ROLQ((r13_39 ^ r14_9), 1));\n    int64_t rcx_20 = (ROLQ((rcx_18 ^ r15_20), 1));\n    int64_t r11_18 = ((r11_16 + var_110) + rdx_19);\n    int64_t rsi_19 = (ROLQ((rsi_17 ^ r11_18), 0x20));\n    int64_t r10_18 = ((r10_16 + var_c0) + rax_19);\n    int64_t r12_8 = (r12_7 + rsi_19);\n    int64_t rbp_22 = ((rbp_20 + var_e8) + rcx_20);\n    int64_t r13_44 = (ROLQ((r13_32 ^ r10_18), 0x20));\n    int64_t rdx_21 = (RORQ((rdx_19 ^ r12_8), 0x18));\n    int64_t r15_22 = (r15_15 + r13_44);\n    int64_t r11_20 = ((r11_18 + var_128) + rdx_21);\n    int64_t rax_21 = (RORQ((rax_19 ^ r15_22), 0x18));\n    int64_t rsi_21 = (RORQ((rsi_19 ^ r11_20), 0x10));\n    int64_t r10_20 = ((r10_18 + var_d0) + rax_21);\n    int64_t r12_9 = (r12_8 + rsi_21);\n    int64_t r13_46 = (RORQ((r13_44 ^ r10_20), 0x10));\n    int64_t rdx_23 = (ROLQ((rdx_21 ^ r12_9), 1));\n    int64_t r15_23 = (r15_22 + r13_46);\n    int64_t r13_48 = (ROLQ((r13_46 ^ rbp_22), 0x20));\n    int64_t r12_10 = (r12_9 + r13_48);\n    int64_t rax_23 = (ROLQ((rax_21 ^ r15_23), 1));\n    int64_t rcx_22 = (RORQ((rcx_20 ^ r12_10), 0x18));\n    int64_t rbx_22 = ((rbx_20 + var_120) + rdx_23);\n    int64_t rbp_24 = ((rbp_22 + var_c8) + rcx_22);\n    int64_t r11_22 = ((r11_20 + var_100) + rax_23);\n    int64_t r9_23 = (ROLQ((r9_21 ^ rbx_22), 0x20));\n    int64_t r13_50 = (RORQ((r13_48 ^ rbp_24), 0x10));\n    int64_t r15_24 = (r15_23 + r9_23);\n    int64_t r8_23 = (ROLQ((r8_21 ^ r11_22), 0x20));\n    int64_t r12_11 = (r12_10 + r13_50);\n    int64_t r14_10 = (r14_9 + r8_23);\n    int64_t rdx_25 = (RORQ((rdx_23 ^ r15_24), 0x18));\n    int64_t rcx_24 = (ROLQ((rcx_22 ^ r12_11), 1));\n    int64_t rbx_24 = ((rbx_22 + var_108) + rdx_25);\n    int64_t rax_25 = (RORQ((rax_23 ^ r14_10), 0x18));\n    int64_t r11_24 = ((r11_22 + var_130) + rax_25);\n    int64_t r9_25 = (RORQ((r9_23 ^ rbx_24), 0x10));\n    int64_t r15_25 = (r15_24 + r9_25);\n    int64_t r8_25 = (RORQ((r8_23 ^ r11_24), 0x10));\n    int64_t rdx_27 = (ROLQ((rdx_25 ^ r15_25), 1));\n    int64_t r14_11 = (r14_10 + r8_25);\n    int64_t r10_22 = ((r10_20 + var_f0) + r13_41);\n    int64_t rax_27 = (ROLQ((rax_25 ^ r14_11), 1));\n    int64_t rsi_23 = (ROLQ((rsi_21 ^ r10_22), 0x20));\n    int64_t r15_27 = (r15_20 + rsi_23);\n    int64_t r13_53 = (RORQ((r13_41 ^ r15_27), 0x18));\n    int64_t r10_24 = ((r10_22 + var_118) + r13_53);\n    int64_t rsi_25 = (RORQ((rsi_23 ^ r10_24), 0x10));\n    int64_t r15_28 = (r15_27 + rsi_25);\n    int64_t r13_55 = (ROLQ((r13_53 ^ r15_28), 1));\n    int64_t rbp_26 = ((rbp_24 + var_100) + r13_55);\n    int64_t r9_27 = (ROLQ((r9_25 ^ rbp_26), 0x20));\n    int64_t r14_12 = (r14_11 + r9_27);\n    int64_t r13_57 = (RORQ((r13_55 ^ r14_12), 0x18));\n    int64_t rbp_28 = ((rbp_26 + var_f0) + r13_57);\n    int64_t r9_29 = (RORQ((r9_27 ^ rbp_28), 0x10));\n    int64_t r14_13 = (r14_12 + r9_29);\n    int64_t r13_59 = (ROLQ((r13_57 ^ r14_13), 1));\n    int64_t rbx_26 = ((rbx_24 + var_120) + rcx_24);\n    int64_t r11_26 = ((r11_24 + var_d0) + rdx_27);\n    int64_t r8_27 = (ROLQ((r8_25 ^ rbx_26), 0x20));\n    int64_t r10_26 = ((r10_24 + var_e0) + rax_27);\n    int64_t r15_29 = (r15_28 + r8_27);\n    int64_t rsi_27 = (ROLQ((rsi_25 ^ r11_26), 0x20));\n    int64_t r12_12 = (r12_11 + rsi_27);\n    int64_t rcx_26 = (RORQ((rcx_24 ^ r15_29), 0x18));\n    int64_t rdx_29 = (RORQ((rdx_27 ^ r12_12), 0x18));\n    int64_t rbx_28 = ((rbx_26 + var_130) + rcx_26);\n    int64_t r13_62 = (ROLQ((r13_50 ^ r10_26), 0x20));\n    int64_t r11_28 = ((r11_26 + var_d8) + rdx_29);\n    int64_t r8_29 = (RORQ((r8_27 ^ rbx_28), 0x10));\n    int64_t r15_30 = (r15_29 + r8_29);\n    int64_t rsi_29 = (RORQ((rsi_27 ^ r11_28), 0x10));\n    int64_t r12_13 = (r12_12 + rsi_29);\n    int64_t rcx_28 = (ROLQ((rcx_26 ^ r15_30), 1));\n    int64_t r15_32 = (r15_25 + r13_62);\n    int64_t rdx_31 = (ROLQ((rdx_29 ^ r12_13), 1));\n    int64_t rax_29 = (RORQ((rax_27 ^ r15_32), 0x18));\n    int64_t rbp_30 = ((rbp_28 + var_128) + rcx_28);\n    int64_t r10_28 = ((r10_26 + var_c8) + rax_29);\n    int64_t r13_64 = (RORQ((r13_62 ^ r10_28), 0x10));\n    int64_t r15_33 = (r15_32 + r13_64);\n    int64_t r13_66 = (ROLQ((r13_64 ^ rbp_30), 0x20));\n    int64_t r12_14 = (r12_13 + r13_66);\n    int64_t rax_31 = (ROLQ((rax_29 ^ r15_33), 1));\n    int64_t rcx_30 = (RORQ((rcx_28 ^ r12_14), 0x18));\n    int64_t rbp_32 = ((rbp_30 + var_108) + rcx_30);\n    int64_t r13_68 = (RORQ((r13_66 ^ rbp_32), 0x10));\n    int64_t r12_15 = (r12_14 + r13_68);\n    int64_t rbx_30 = ((rbx_28 + var_110) + rdx_31);\n    int64_t rcx_32 = (ROLQ((rcx_30 ^ r12_15), 1));\n    int64_t r9_31 = (ROLQ((r9_29 ^ rbx_30), 0x20));\n    int64_t r15_34 = (r15_33 + r9_31);\n    int64_t rdx_33 = (RORQ((rdx_31 ^ r15_34), 0x18));\n    int64_t rbx_32 = ((rbx_30 + var_e8) + rdx_33);\n    int64_t r9_33 = (RORQ((r9_31 ^ rbx_32), 0x10));\n    int64_t r11_30 = ((r11_28 + var_118) + rax_31);\n    int64_t r10_30 = ((r10_28 + var_c0) + r13_59);\n    int64_t r15_35 = (r15_34 + r9_33);\n    int64_t r8_31 = (ROLQ((r8_29 ^ r11_30), 0x20));\n    int64_t rsi_31 = (ROLQ((rsi_29 ^ r10_30), 0x20));\n    int64_t r14_14 = (r14_13 + r8_31);\n    int64_t rdx_35 = (ROLQ((rdx_33 ^ r15_35), 1));\n    int64_t r15_37 = (r15_30 + rsi_31);\n    int64_t rax_33 = (RORQ((rax_31 ^ r14_14), 0x18));\n    int64_t r11_32 = ((r11_30 + var_138) + rax_33);\n    int64_t r13_71 = (RORQ((r13_59 ^ r15_37), 0x18));\n    int64_t r10_32 = ((r10_30 + var_f8) + r13_71);\n    int64_t r8_33 = (RORQ((r8_31 ^ r11_32), 0x10));\n    int64_t r14_15 = (r14_14 + r8_33);\n    int64_t rsi_33 = (RORQ((rsi_31 ^ r10_32), 0x10));\n    int64_t r15_38 = (r15_37 + rsi_33);\n    int64_t rax_35 = (ROLQ((rax_33 ^ r14_15), 1));\n    int64_t r13_73 = (ROLQ((r13_71 ^ r15_38), 1));\n    int64_t rbp_34 = ((rbp_32 + var_f0) + r13_73);\n    int64_t rbx_34 = ((rbx_32 + var_110) + rcx_32);\n    int64_t r9_35 = (ROLQ((r9_33 ^ rbp_34), 0x20));\n    int64_t r8_35 = (ROLQ((r8_33 ^ rbx_34), 0x20));\n    int64_t r11_34 = ((r11_32 + var_128) + rdx_35);\n    int64_t r14_16 = (r14_15 + r9_35);\n    int64_t r15_39 = (r15_38 + r8_35);\n    int64_t r13_75 = (RORQ((r13_73 ^ r14_16), 0x18));\n    int64_t rcx_34 = (RORQ((rcx_32 ^ r15_39), 0x18));\n    int64_t rbp_36 = ((rbp_34 + var_138) + r13_75);\n    int64_t rbx_36 = ((rbx_34 + var_100) + rcx_34);\n    int64_t r9_37 = (RORQ((r9_35 ^ rbp_36), 0x10));\n    int64_t r8_37 = (RORQ((r8_35 ^ rbx_36), 0x10));\n    int64_t r14_17 = (r14_16 + r9_37);\n    int64_t r15_40 = (r15_39 + r8_37);\n    int64_t r13_77 = (ROLQ((r13_75 ^ r14_17), 1));\n    int64_t rcx_36 = (ROLQ((rcx_34 ^ r15_40), 1));\n    int64_t rsi_35 = (ROLQ((rsi_33 ^ r11_34), 0x20));\n    int64_t r12_16 = (r12_15 + rsi_35);\n    int64_t r10_34 = ((r10_32 + var_e8) + rax_35);\n    int64_t rdx_37 = (RORQ((rdx_35 ^ r12_16), 0x18));\n    int64_t rbp_38 = ((rbp_36 + var_c8) + rcx_36);\n    int64_t r13_80 = (ROLQ((r13_68 ^ r10_34), 0x20));\n    int64_t r11_36 = ((r11_34 + var_118) + rdx_37);\n    int64_t r15_42 = (r15_35 + r13_80);\n    int64_t rsi_37 = (RORQ((rsi_35 ^ r11_36), 0x10));\n    int64_t rax_37 = (RORQ((rax_35 ^ r15_42), 0x18));\n    int64_t r12_17 = (r12_16 + rsi_37);\n    int64_t r10_36 = ((r10_34 + var_c0) + rax_37);\n    int64_t rdx_39 = (ROLQ((rdx_37 ^ r12_17), 1));\n    int64_t r13_82 = (RORQ((r13_80 ^ r10_36), 0x10));\n    int64_t r15_43 = (r15_42 + r13_82);\n    int64_t r13_84 = (ROLQ((r13_82 ^ rbp_38), 0x20));\n    int64_t r12_18 = (r12_17 + r13_84);\n    int64_t rax_39 = (ROLQ((rax_37 ^ r15_43), 1));\n    int64_t rcx_38 = (RORQ((rcx_36 ^ r12_18), 0x18));\n    int64_t rbx_38 = ((rbx_36 + var_e0) + rdx_39);\n    int64_t rbp_40 = ((rbp_38 + var_130) + rcx_38);\n    int64_t r11_38 = ((r11_36 + var_108) + rax_39);\n    int64_t r9_39 = (ROLQ((r9_37 ^ rbx_38), 0x20));\n    int64_t r13_86 = (RORQ((r13_84 ^ rbp_40), 0x10));\n    int64_t r15_44 = (r15_43 + r9_39);\n    int64_t r8_39 = (ROLQ((r8_37 ^ r11_38), 0x20));\n    int64_t r12_19 = (r12_18 + r13_86);\n    int64_t r14_18 = (r14_17 + r8_39);\n    int64_t rdx_41 = (RORQ((rdx_39 ^ r15_44), 0x18));\n    int64_t rcx_40 = (ROLQ((rcx_38 ^ r12_19), 1));\n    int64_t rbx_40 = ((rbx_38 + var_d8) + rdx_41);\n    int64_t rax_41 = (RORQ((rax_39 ^ r14_18), 0x18));\n    int64_t r11_40 = ((r11_38 + var_f8) + rax_41);\n    int64_t r9_41 = (RORQ((r9_39 ^ rbx_40), 0x10));\n    int64_t r15_45 = (r15_44 + r9_41);\n    int64_t r8_41 = (RORQ((r8_39 ^ r11_40), 0x10));\n    int64_t rdx_43 = (ROLQ((rdx_41 ^ r15_45), 1));\n    int64_t r14_19 = (r14_18 + r8_41);\n    int64_t r10_38 = ((r10_36 + var_120) + r13_77);\n    int64_t rax_43 = (ROLQ((rax_41 ^ r14_19), 1));\n    int64_t rsi_39 = (ROLQ((rsi_37 ^ r10_38), 0x20));\n    int64_t r15_47 = (r15_40 + rsi_39);\n    int64_t r13_89 = (RORQ((r13_77 ^ r15_47), 0x18));\n    int64_t r10_40 = ((r10_38 + var_d0) + r13_89);\n    int64_t rsi_41 = (RORQ((rsi_39 ^ r10_40), 0x10));\n    int64_t r15_48 = (r15_47 + rsi_41);\n    int64_t r13_91 = (ROLQ((r13_89 ^ r15_48), 1));\n    int64_t rbp_42 = ((rbp_40 + var_128) + r13_91);\n    int64_t r9_43 = (ROLQ((r9_41 ^ rbp_42), 0x20));\n    int64_t r14_20 = (r14_19 + r9_43);\n    int64_t r13_93 = (RORQ((r13_91 ^ r14_20), 0x18));\n    int64_t rbp_44 = ((rbp_42 + var_d8) + r13_93);\n    int64_t r9_45 = (RORQ((r9_43 ^ rbp_44), 0x10));\n    int64_t r14_21 = (r14_20 + r9_45);\n    int64_t r13_95 = (ROLQ((r13_93 ^ r14_21), 1));\n    int64_t rbx_42 = ((rbx_40 + var_108) + rcx_40);\n    int64_t r11_42 = ((r11_40 + var_138) + rdx_43);\n    int64_t r8_43 = (ROLQ((r8_41 ^ rbx_42), 0x20));\n    int64_t r15_49 = (r15_48 + r8_43);\n    int64_t rsi_43 = (ROLQ((rsi_41 ^ r11_42), 0x20));\n    int64_t r10_42 = ((r10_40 + var_f8) + rax_43);\n    int64_t r12_20 = (r12_19 + rsi_43);\n    int64_t rcx_42 = (RORQ((rcx_40 ^ r15_49), 0x18));\n    int64_t r13_98 = (ROLQ((r13_86 ^ r10_42), 0x20));\n    int64_t rbx_44 = ((rbx_42 + var_e8) + rcx_42);\n    int64_t rdx_45 = (RORQ((rdx_43 ^ r12_20), 0x18));\n    int64_t r11_44 = ((r11_42 + var_e0) + rdx_45);\n    int64_t r8_45 = (RORQ((r8_43 ^ rbx_44), 0x10));\n    int64_t r15_50 = (r15_49 + r8_45);\n    int64_t rsi_45 = (RORQ((rsi_43 ^ r11_44), 0x10));\n    int64_t r12_21 = (r12_20 + rsi_45);\n    int64_t rcx_44 = (ROLQ((rcx_42 ^ r15_50), 1));\n    int64_t r15_52 = (r15_45 + r13_98);\n    int64_t rdx_47 = (ROLQ((rdx_45 ^ r12_21), 1));\n    int64_t rax_45 = (RORQ((rax_43 ^ r15_52), 0x18));\n    int64_t rbp_46 = ((rbp_44 + var_118) + rcx_44);\n    int64_t r10_44 = ((r10_42 + var_120) + rax_45);\n    int64_t rbx_46 = ((rbx_44 + var_100) + rdx_47);\n    int64_t r13_100 = (RORQ((r13_98 ^ r10_44), 0x10));\n    int64_t r9_47 = (ROLQ((r9_45 ^ rbx_46), 0x20));\n    int64_t r15_53 = (r15_52 + r13_100);\n    int64_t r13_102 = (ROLQ((r13_100 ^ rbp_46), 0x20));\n    int64_t r15_54 = (r15_53 + r9_47);\n    int64_t r12_22 = (r12_21 + r13_102);\n    int64_t rax_47 = (ROLQ((rax_45 ^ r15_53), 1));\n    int64_t rdx_49 = (RORQ((rdx_47 ^ r15_54), 0x18));\n    int64_t rcx_46 = (RORQ((rcx_44 ^ r12_22), 0x18));\n    int64_t rbx_48 = ((rbx_46 + var_110) + rdx_49);\n    int64_t rbp_48 = ((rbp_46 + var_d0) + rcx_46);\n    int64_t r13_104 = (RORQ((r13_102 ^ rbp_48), 0x10));\n    int64_t r12_23 = (r12_22 + r13_104);\n    int64_t rcx_48 = (ROLQ((rcx_46 ^ r12_23), 1));\n    int64_t r9_49 = (RORQ((r9_47 ^ rbx_48), 0x10));\n    int64_t r11_46 = ((r11_44 + var_c0) + rax_47);\n    int64_t r10_46 = ((r10_44 + var_130) + r13_95);\n    int64_t r15_55 = (r15_54 + r9_49);\n    int64_t r8_47 = (ROLQ((r8_45 ^ r11_46), 0x20));\n    int64_t rsi_47 = (ROLQ((rsi_45 ^ r10_46), 0x20));\n    int64_t r14_22 = (r14_21 + r8_47);\n    int64_t rdx_51 = (ROLQ((rdx_49 ^ r15_55), 1));\n    int64_t r15_57 = (r15_50 + rsi_47);\n    int64_t rax_49 = (RORQ((rax_47 ^ r14_22), 0x18));\n    int64_t r11_48 = ((r11_46 + var_c8) + rax_49);\n    int64_t r13_107 = (RORQ((r13_95 ^ r15_57), 0x18));\n    int64_t r10_48 = ((r10_46 + var_f0) + r13_107);\n    int64_t r8_49 = (RORQ((r8_47 ^ r11_48), 0x10));\n    int64_t r14_23 = (r14_22 + r8_49);\n    int64_t rsi_49 = (RORQ((rsi_47 ^ r10_48), 0x10));\n    int64_t r15_58 = (r15_57 + rsi_49);\n    int64_t rax_51 = (ROLQ((rax_49 ^ r14_23), 1));\n    int64_t r13_109 = (ROLQ((r13_107 ^ r15_58), 1));\n    int64_t rbp_50 = ((rbp_48 + var_d8) + r13_109);\n    int64_t rbx_50 = ((rbx_48 + var_130) + rcx_48);\n    int64_t r9_51 = (ROLQ((r9_49 ^ rbp_50), 0x20));\n    int64_t r8_51 = (ROLQ((r8_49 ^ rbx_50), 0x20));\n    int64_t r11_50 = ((r11_48 + var_c8) + rdx_51);\n    int64_t r14_24 = (r14_23 + r9_51);\n    int64_t r15_59 = (r15_58 + r8_51);\n    int64_t r13_111 = (RORQ((r13_109 ^ r14_24), 0x18));\n    int64_t rcx_50 = (RORQ((rcx_48 ^ r15_59), 0x18));\n    int64_t rbp_52 = ((rbp_50 + var_110) + r13_111);\n    int64_t rbx_52 = ((rbx_50 + var_c0) + rcx_50);\n    int64_t r9_53 = (RORQ((r9_51 ^ rbp_52), 0x10));\n    int64_t r8_53 = (RORQ((r8_51 ^ rbx_52), 0x10));\n    int64_t r14_25 = (r14_24 + r9_53);\n    int64_t r15_60 = (r15_59 + r8_53);\n    int64_t r13_113 = (ROLQ((r13_111 ^ r14_25), 1));\n    int64_t rcx_52 = (ROLQ((rcx_50 ^ r15_60), 1));\n    int64_t rsi_51 = (ROLQ((rsi_49 ^ r11_50), 0x20));\n    int64_t r12_24 = (r12_23 + rsi_51);\n    int64_t r10_50 = ((r10_48 + var_118) + rax_51);\n    int64_t rdx_53 = (RORQ((rdx_51 ^ r12_24), 0x18));\n    int64_t rbp_54 = ((rbp_52 + var_138) + rcx_52);\n    int64_t r13_116 = (ROLQ((r13_104 ^ r10_50), 0x20));\n    int64_t r11_52 = ((r11_50 + var_d0) + rdx_53);\n    int64_t r15_62 = (r15_55 + r13_116);\n    int64_t rsi_53 = (RORQ((rsi_51 ^ r11_52), 0x10));\n    int64_t rax_53 = (RORQ((rax_51 ^ r15_62), 0x18));\n    int64_t r12_25 = (r12_24 + rsi_53);\n    int64_t r10_52 = ((r10_50 + var_e8) + rax_53);\n    int64_t rdx_55 = (ROLQ((rdx_53 ^ r12_25), 1));\n    int64_t r13_118 = (RORQ((r13_116 ^ r10_52), 0x10));\n    int64_t r15_63 = (r15_62 + r13_118);\n    int64_t r13_120 = (ROLQ((r13_118 ^ rbp_54), 0x20));\n    int64_t r12_26 = (r12_25 + r13_120);\n    int64_t rax_55 = (ROLQ((rax_53 ^ r15_63), 1));\n    int64_t rcx_54 = (RORQ((rcx_52 ^ r12_26), 0x18));\n    int64_t rbx_54 = ((rbx_52 + var_108) + rdx_55);\n    int64_t rbp_56 = ((rbp_54 + var_100) + rcx_54);\n    int64_t r11_54 = ((r11_52 + var_f0) + rax_55);\n    int64_t r9_55 = (ROLQ((r9_53 ^ rbx_54), 0x20));\n    int64_t r13_122 = (RORQ((r13_120 ^ rbp_56), 0x10));\n    int64_t r15_64 = (r15_63 + r9_55);\n    int64_t r8_55 = (ROLQ((r8_53 ^ r11_54), 0x20));\n    int64_t r12_27 = (r12_26 + r13_122);\n    int64_t r14_26 = (r14_25 + r8_55);\n    int64_t rdx_57 = (RORQ((rdx_55 ^ r15_64), 0x18));\n    int64_t rcx_56 = (ROLQ((rcx_54 ^ r12_27), 1));\n    int64_t rbx_56 = ((rbx_54 + var_120) + rdx_57);\n    int64_t rax_57 = (RORQ((rax_55 ^ r14_26), 0x18));\n    int64_t r11_56 = ((r11_54 + var_128) + rax_57);\n    int64_t r9_57 = (RORQ((r9_55 ^ rbx_56), 0x10));\n    int64_t r15_65 = (r15_64 + r9_57);\n    int64_t r8_57 = (RORQ((r8_55 ^ r11_56), 0x10));\n    int64_t rdx_59 = (ROLQ((rdx_57 ^ r15_65), 1));\n    int64_t r14_27 = (r14_26 + r8_57);\n    int64_t r10_54 = ((r10_52 + var_f8) + r13_113);\n    int64_t rax_59 = (ROLQ((rax_57 ^ r14_27), 1));\n    int64_t rsi_55 = (ROLQ((rsi_53 ^ r10_54), 0x20));\n    int64_t r15_67 = (r15_60 + rsi_55);\n    int64_t r13_125 = (RORQ((r13_113 ^ r15_67), 0x18));\n    int64_t r10_56 = ((r10_54 + var_e0) + r13_125);\n    int64_t rsi_57 = (RORQ((rsi_55 ^ r10_56), 0x10));\n    int64_t r15_68 = (r15_67 + rsi_57);\n    int64_t r13_127 = (ROLQ((r13_125 ^ r15_68), 1));\n    int64_t rbp_58 = ((rbp_56 + var_d0) + r13_127);\n    int64_t r9_59 = (ROLQ((r9_57 ^ rbp_58), 0x20));\n    int64_t r14_28 = (r14_27 + r9_59);\n    int64_t r13_129 = (RORQ((r13_127 ^ r14_28), 0x18));\n    int64_t rbp_60 = ((rbp_58 + var_e0) + r13_129);\n    int64_t r9_61 = (RORQ((r9_59 ^ rbp_60), 0x10));\n    int64_t r14_29 = (r14_28 + r9_61);\n    int64_t r13_131 = (ROLQ((r13_129 ^ r14_29), 1));\n    int64_t rbx_58 = ((rbx_56 + var_100) + rcx_56);\n    int64_t r11_58 = ((r11_56 + var_d8) + rdx_59);\n    int64_t r8_59 = (ROLQ((r8_57 ^ rbx_58), 0x20));\n    int64_t r10_58 = ((r10_56 + var_120) + rax_59);\n    int64_t r15_69 = (r15_68 + r8_59);\n    int64_t rsi_59 = (ROLQ((rsi_57 ^ r11_58), 0x20));\n    int64_t r12_28 = (r12_27 + rsi_59);\n    int64_t rcx_58 = (RORQ((rcx_56 ^ r15_69), 0x18));\n    int64_t rdx_61 = (RORQ((rdx_59 ^ r12_28), 0x18));\n    int64_t rbx_60 = ((rbx_58 + var_c8) + rcx_58);\n    int64_t r13_134 = (ROLQ((r13_122 ^ r10_58), 0x20));\n    int64_t r11_60 = ((r11_58 + var_130) + rdx_61);\n    int64_t r8_61 = (RORQ((r8_59 ^ rbx_60), 0x10));\n    int64_t r15_70 = (r15_69 + r8_61);\n    int64_t rsi_61 = (RORQ((rsi_59 ^ r11_60), 0x10));\n    int64_t r12_29 = (r12_28 + rsi_61);\n    int64_t rcx_60 = (ROLQ((rcx_58 ^ r15_70), 1));\n    int64_t r15_72 = (r15_65 + r13_134);\n    int64_t rdx_63 = (ROLQ((rdx_61 ^ r12_29), 1));\n    int64_t rax_61 = (RORQ((rax_59 ^ r15_72), 0x18));\n    int64_t rbp_62 = ((rbp_60 + var_110) + rcx_60);\n    int64_t r10_60 = ((r10_58 + var_f0) + rax_61);\n    int64_t r13_136 = (RORQ((r13_134 ^ r10_60), 0x10));\n    int64_t r15_73 = (r15_72 + r13_136);\n    int64_t r13_138 = (ROLQ((r13_136 ^ rbp_62), 0x20));\n    int64_t r12_30 = (r12_29 + r13_138);\n    int64_t rax_63 = (ROLQ((rax_61 ^ r15_73), 1));\n    int64_t rcx_62 = (RORQ((rcx_60 ^ r12_30), 0x18));\n    int64_t rbp_64 = ((rbp_62 + var_138) + rcx_62);\n    int64_t r13_140 = (RORQ((r13_138 ^ rbp_64), 0x10));\n    int64_t r12_31 = (r12_30 + r13_140);\n    int64_t rbx_62 = ((rbx_60 + var_c0) + rdx_63);\n    int64_t rcx_64 = (ROLQ((rcx_62 ^ r12_31), 1));\n    int64_t r9_63 = (ROLQ((r9_61 ^ rbx_62), 0x20));\n    int64_t r15_74 = (r15_73 + r9_63);\n    int64_t rdx_65 = (RORQ((rdx_63 ^ r15_74), 0x18));\n    int64_t rbx_64 = ((rbx_62 + var_118) + rdx_65);\n    int64_t r9_65 = (RORQ((r9_63 ^ rbx_64), 0x10));\n    int64_t r11_62 = ((r11_60 + var_f8) + rax_63);\n    int64_t r10_62 = ((r10_60 + var_128) + r13_131);\n    int64_t r15_75 = (r15_74 + r9_65);\n    int64_t r8_63 = (ROLQ((r8_61 ^ r11_62), 0x20));\n    int64_t rsi_63 = (ROLQ((rsi_61 ^ r10_62), 0x20));\n    int64_t r14_30 = (r14_29 + r8_63);\n    int64_t rdx_67 = (ROLQ((rdx_65 ^ r15_75), 1));\n    int64_t r15_77 = (r15_70 + rsi_63);\n    int64_t rax_65 = (RORQ((rax_63 ^ r14_30), 0x18));\n    int64_t r11_64 = ((r11_62 + var_108) + rax_65);\n    int64_t r13_143 = (RORQ((r13_131 ^ r15_77), 0x18));\n    int64_t r10_64 = ((r10_62 + var_e8) + r13_143);\n    int64_t r8_65 = (RORQ((r8_63 ^ r11_64), 0x10));\n    int64_t r14_31 = (r14_30 + r8_65);\n    int64_t rsi_65 = (RORQ((rsi_63 ^ r10_64), 0x10));\n    int64_t r15_78 = (r15_77 + rsi_65);\n    int64_t rax_67 = (ROLQ((rax_65 ^ r14_31), 1));\n    int64_t r13_145 = (ROLQ((r13_143 ^ r15_78), 1));\n    int64_t rbp_66 = ((rbp_64 + var_108) + r13_145);\n    int64_t rbx_66 = ((rbx_64 + var_c8) + rcx_64);\n    int64_t r9_67 = (ROLQ((r9_65 ^ rbp_66), 0x20));\n    int64_t r8_67 = (ROLQ((r8_65 ^ rbx_66), 0x20));\n    int64_t r11_66 = ((r11_64 + var_e0) + rdx_67);\n    int64_t r14_32 = (r14_31 + r9_67);\n    int64_t r15_79 = (r15_78 + r8_67);\n    int64_t r13_147 = (RORQ((r13_145 ^ r14_32), 0x18));\n    int64_t rcx_66 = (RORQ((rcx_64 ^ r15_79), 0x18));\n    int64_t rbp_68 = ((rbp_66 + var_c0) + r13_147);\n    int64_t rbx_68 = ((rbx_66 + var_f0) + rcx_66);\n    int64_t r9_69 = (RORQ((r9_67 ^ rbp_68), 0x10));\n    int64_t r8_69 = (RORQ((r8_67 ^ rbx_68), 0x10));\n    int64_t r14_33 = (r14_32 + r9_69);\n    int64_t r15_80 = (r15_79 + r8_69);\n    int64_t r13_149 = (ROLQ((r13_147 ^ r14_33), 1));\n    int64_t rcx_68 = (ROLQ((rcx_66 ^ r15_80), 1));\n    int64_t rsi_67 = (ROLQ((rsi_65 ^ r11_66), 0x20));\n    int64_t r12_32 = (r12_31 + rsi_67);\n    int64_t r10_66 = ((r10_64 + var_138) + rax_67);\n    int64_t rdx_69 = (RORQ((rdx_67 ^ r12_32), 0x18));\n    int64_t rbp_70 = ((rbp_68 + var_d8) + rcx_68);\n    int64_t r13_152 = (ROLQ((r13_140 ^ r10_66), 0x20));\n    int64_t r11_68 = ((r11_66 + var_120) + rdx_69);\n    int64_t r15_82 = (r15_75 + r13_152);\n    int64_t rsi_69 = (RORQ((rsi_67 ^ r11_68), 0x10));\n    int64_t rax_69 = (RORQ((rax_67 ^ r15_82), 0x18));\n    int64_t r12_33 = (r12_32 + rsi_69);\n    int64_t r10_68 = ((r10_66 + var_f8) + rax_69);\n    int64_t rdx_71 = (ROLQ((rdx_69 ^ r12_33), 1));\n    int64_t r13_154 = (RORQ((r13_152 ^ r10_68), 0x10));\n    int64_t r15_83 = (r15_82 + r13_154);\n    int64_t r13_156 = (ROLQ((r13_154 ^ rbp_70), 0x20));\n    int64_t r12_34 = (r12_33 + r13_156);\n    int64_t rax_71 = (ROLQ((rax_69 ^ r15_83), 1));\n    int64_t rcx_70 = (RORQ((rcx_68 ^ r12_34), 0x18));\n    int64_t rbx_70 = ((rbx_68 + var_d0) + rdx_71);\n    int64_t rbp_72 = ((rbp_70 + var_128) + rcx_70);\n    int64_t r11_70 = ((r11_68 + var_130) + rax_71);\n    int64_t r9_71 = (ROLQ((r9_69 ^ rbx_70), 0x20));\n    int64_t r13_158 = (RORQ((r13_156 ^ rbp_72), 0x10));\n    int64_t r15_84 = (r15_83 + r9_71);\n    int64_t r8_71 = (ROLQ((r8_69 ^ r11_70), 0x20));\n    int64_t r12_35 = (r12_34 + r13_158);\n    int64_t r14_34 = (r14_33 + r8_71);\n    int64_t rdx_73 = (RORQ((rdx_71 ^ r15_84), 0x18));\n    int64_t rcx_72 = (ROLQ((rcx_70 ^ r12_35), 1));\n    int64_t rbx_72 = ((rbx_70 + var_100) + rdx_73);\n    int64_t rax_73 = (RORQ((rax_71 ^ r14_34), 0x18));\n    int64_t r11_72 = ((r11_70 + var_118) + rax_73);\n    int64_t r9_73 = (RORQ((r9_71 ^ rbx_72), 0x10));\n    int64_t r15_85 = (r15_84 + r9_73);\n    int64_t r8_73 = (RORQ((r8_71 ^ r11_72), 0x10));\n    int64_t rdx_75 = (ROLQ((rdx_73 ^ r15_85), 1));\n    int64_t r14_35 = (r14_34 + r8_73);\n    int64_t r10_70 = ((r10_68 + var_e8) + r13_149);\n    int64_t rax_75 = (ROLQ((rax_73 ^ r14_35), 1));\n    int64_t rsi_71 = (ROLQ((rsi_69 ^ r10_70), 0x20));\n    int64_t r15_87 = (r15_80 + rsi_71);\n    int64_t r13_161 = (RORQ((r13_149 ^ r15_87), 0x18));\n    int64_t r10_72 = ((r10_70 + var_110) + r13_161);\n    int64_t rsi_73 = (RORQ((rsi_71 ^ r10_72), 0x10));\n    int64_t r15_88 = (r15_87 + rsi_73);\n    int64_t r13_163 = (ROLQ((r13_161 ^ r15_88), 1));\n    int64_t rbp_74 = ((rbp_72 + var_e8) + r13_163);\n    int64_t r9_75 = (ROLQ((r9_73 ^ rbp_74), 0x20));\n    int64_t r14_36 = (r14_35 + r9_75);\n    int64_t r13_165 = (RORQ((r13_163 ^ r14_36), 0x18));\n    int64_t rbp_76 = ((rbp_74 + var_128) + r13_165);\n    int64_t r9_77 = (RORQ((r9_75 ^ rbp_76), 0x10));\n    int64_t r14_37 = (r14_36 + r9_77);\n    int64_t r13_167 = (ROLQ((r13_165 ^ r14_37), 1));\n    int64_t rbx_74 = ((rbx_72 + var_f8) + rcx_72);\n    int64_t r11_74 = ((r11_72 + var_100) + rdx_75);\n    int64_t r8_75 = (ROLQ((r8_73 ^ rbx_74), 0x20));\n    int64_t r10_74 = ((r10_72 + var_130) + rax_75);\n    int64_t r15_89 = (r15_88 + r8_75);\n    int64_t rsi_75 = (ROLQ((rsi_73 ^ r11_74), 0x20));\n    int64_t r12_36 = (r12_35 + rsi_75);\n    int64_t rcx_74 = (RORQ((rcx_72 ^ r15_89), 0x18));\n    int64_t rdx_77 = (RORQ((rdx_75 ^ r12_36), 0x18));\n    int64_t rbx_76 = ((rbx_74 + var_118) + rcx_74);\n    int64_t r13_170 = (ROLQ((r13_158 ^ r10_74), 0x20));\n    int64_t r11_76 = ((r11_74 + var_108) + rdx_77);\n    int64_t r8_77 = (RORQ((r8_75 ^ rbx_76), 0x10));\n    int64_t r15_90 = (r15_89 + r8_77);\n    int64_t rsi_77 = (RORQ((rsi_75 ^ r11_76), 0x10));\n    int64_t r12_37 = (r12_36 + rsi_77);\n    int64_t rcx_76 = (ROLQ((rcx_74 ^ r15_90), 1));\n    int64_t r15_92 = (r15_85 + r13_170);\n    int64_t rdx_79 = (ROLQ((rdx_77 ^ r12_37), 1));\n    int64_t rax_77 = (RORQ((rax_75 ^ r15_92), 0x18));\n    int64_t rbp_78 = ((rbp_76 + var_c0) + rcx_76);\n    int64_t r10_76 = ((r10_74 + var_110) + rax_77);\n    int64_t rbx_78 = ((rbx_76 + var_f0) + rdx_79);\n    int64_t r13_172 = (RORQ((r13_170 ^ r10_76), 0x10));\n    int64_t r9_79 = (ROLQ((r9_77 ^ rbx_78), 0x20));\n    int64_t r15_93 = (r15_92 + r13_172);\n    int64_t r13_174 = (ROLQ((r13_172 ^ rbp_78), 0x20));\n    int64_t r15_94 = (r15_93 + r9_79);\n    int64_t r12_38 = (r12_37 + r13_174);\n    int64_t rax_79 = (ROLQ((rax_77 ^ r15_93), 1));\n    int64_t rdx_81 = (RORQ((rdx_79 ^ r15_94), 0x18));\n    int64_t rcx_78 = (RORQ((rcx_76 ^ r12_38), 0x18));\n    int64_t rbx_80 = ((rbx_78 + var_c8) + rdx_81);\n    int64_t rbp_80 = ((rbp_78 + var_e0) + rcx_78);\n    int64_t r13_176 = (RORQ((r13_174 ^ rbp_80), 0x10));\n    int64_t r12_39 = (r12_38 + r13_176);\n    int64_t rcx_80 = (ROLQ((rcx_78 ^ r12_39), 1));\n    int64_t r9_81 = (RORQ((r9_79 ^ rbx_80), 0x10));\n    int64_t r11_78 = ((r11_76 + var_120) + rax_79);\n    int64_t r10_78 = ((r10_76 + var_d0) + r13_167);\n    int64_t r15_95 = (r15_94 + r9_81);\n    int64_t r8_79 = (ROLQ((r8_77 ^ r11_78), 0x20));\n    int64_t rsi_79 = (ROLQ((rsi_77 ^ r10_78), 0x20));\n    int64_t r14_38 = (r14_37 + r8_79);\n    int64_t rdx_83 = (ROLQ((rdx_81 ^ r15_95), 1));\n    int64_t r15_97 = (r15_90 + rsi_79);\n    int64_t rax_81 = (RORQ((rax_79 ^ r14_38), 0x18));\n    int64_t r11_80 = ((r11_78 + var_d8) + rax_81);\n    int64_t r13_179 = (RORQ((r13_167 ^ r15_97), 0x18));\n    int64_t r10_80 = ((r10_78 + var_138) + r13_179);\n    int64_t r8_81 = (RORQ((r8_79 ^ r11_80), 0x10));\n    int64_t r14_39 = (r14_38 + r8_81);\n    int64_t rsi_81 = (RORQ((rsi_79 ^ r10_80), 0x10));\n    int64_t r15_98 = (r15_97 + rsi_81);\n    int64_t rax_83 = (ROLQ((rax_81 ^ r14_39), 1));\n    int64_t r13_181 = (ROLQ((r13_179 ^ r15_98), 1));\n    int64_t rbp_82 = ((rbp_80 + var_138) + r13_181);\n    int64_t rbx_82 = ((rbx_80 + var_128) + rcx_80);\n    int64_t r9_83 = (ROLQ((r9_81 ^ rbp_82), 0x20));\n    int64_t r8_83 = (ROLQ((r8_81 ^ rbx_82), 0x20));\n    int64_t r11_82 = ((r11_80 + var_118) + rdx_83);\n    int64_t r14_40 = (r14_39 + r9_83);\n    int64_t r15_99 = (r15_98 + r8_83);\n    int64_t r13_183 = (RORQ((r13_181 ^ r14_40), 0x18));\n    int64_t rcx_82 = (RORQ((rcx_80 ^ r15_99), 0x18));\n    int64_t rbp_84 = ((rbp_82 + var_130) + r13_183);\n    int64_t rbx_84 = ((rbx_82 + var_120) + rcx_82);\n    int64_t r9_85 = (RORQ((r9_83 ^ rbp_84), 0x10));\n    int64_t r8_85 = (RORQ((r8_83 ^ rbx_84), 0x10));\n    int64_t r14_41 = (r14_40 + r9_85);\n    int64_t r15_100 = (r15_99 + r8_85);\n    int64_t r13_185 = (ROLQ((r13_183 ^ r14_41), 1));\n    int64_t rcx_84 = (ROLQ((rcx_82 ^ r15_100), 1));\n    int64_t rsi_83 = (ROLQ((rsi_81 ^ r11_82), 0x20));\n    int64_t r12_40 = (r12_39 + rsi_83);\n    int64_t r10_82 = ((r10_80 + var_108) + rax_83);\n    int64_t rdx_85 = (RORQ((rdx_83 ^ r12_40), 0x18));\n    int64_t rbp_86 = ((rbp_84 + var_f8) + rcx_84);\n    int64_t r13_188 = (ROLQ((r13_176 ^ r10_82), 0x20));\n    int64_t r11_84 = ((r11_82 + var_110) + rdx_85);\n    int64_t r15_102 = (r15_95 + r13_188);\n    int64_t rsi_85 = (RORQ((rsi_83 ^ r11_84), 0x10));\n    int64_t rax_85 = (RORQ((rax_83 ^ r15_102), 0x18));\n    int64_t r12_41 = (r12_40 + rsi_85);\n    int64_t r10_84 = ((r10_82 + var_100) + rax_85);\n    int64_t rdx_87 = (ROLQ((rdx_85 ^ r12_41), 1));\n    int64_t r13_190 = (RORQ((r13_188 ^ r10_84), 0x10));\n    int64_t r15_103 = (r15_102 + r13_190);\n    int64_t r13_192 = (ROLQ((r13_190 ^ rbp_86), 0x20));\n    int64_t r12_42 = (r12_41 + r13_192);\n    int64_t rax_87 = (ROLQ((rax_85 ^ r15_103), 1));\n    int64_t rcx_86 = (RORQ((rcx_84 ^ r12_42), 0x18));\n    int64_t rbx_86 = ((rbx_84 + var_e8) + rdx_87);\n    int64_t rbp_88 = ((rbp_86 + var_f0) + rcx_86);\n    int64_t r11_86 = ((r11_84 + var_d8) + rax_87);\n    int64_t r9_87 = (ROLQ((r9_85 ^ rbx_86), 0x20));\n    int64_t r13_194 = (RORQ((r13_192 ^ rbp_88), 0x10));\n    int64_t r15_104 = (r15_103 + r9_87);\n    int64_t r8_87 = (ROLQ((r8_85 ^ r11_86), 0x20));\n    int64_t r12_43 = (r12_42 + r13_194);\n    int64_t r14_42 = (r14_41 + r8_87);\n    int64_t rdx_89 = (RORQ((rdx_87 ^ r15_104), 0x18));\n    int64_t rcx_88 = (ROLQ((rcx_86 ^ r12_43), 1));\n    int64_t rbx_88 = ((rbx_86 + var_e0) + rdx_89);\n    int64_t rax_89 = (RORQ((rax_87 ^ r14_42), 0x18));\n    int64_t r11_88 = ((r11_86 + var_d0) + rax_89);\n    int64_t r9_89 = (RORQ((r9_87 ^ rbx_88), 0x10));\n    int64_t r15_105 = (r15_104 + r9_89);\n    int64_t r8_89 = (RORQ((r8_87 ^ r11_88), 0x10));\n    int64_t rdx_91 = (ROLQ((rdx_89 ^ r15_105), 1));\n    int64_t r14_43 = (r14_42 + r8_89);\n    int64_t r10_86 = ((r10_84 + var_c8) + r13_185);\n    int64_t rax_91 = (ROLQ((rax_89 ^ r14_43), 1));\n    int64_t rsi_87 = (ROLQ((rsi_85 ^ r10_86), 0x20));\n    int64_t r15_107 = (r15_100 + rsi_87);\n    int64_t r13_197 = (RORQ((r13_185 ^ r15_107), 0x18));\n    int64_t r10_88 = ((r10_86 + var_c0) + r13_197);\n    int64_t rsi_89 = (RORQ((rsi_87 ^ r10_88), 0x10));\n    int64_t r15_108 = (r15_107 + rsi_89);\n    int64_t r13_199 = (ROLQ((r13_197 ^ r15_108), 1));\n    int64_t rbp_90 = ((rbp_88 + var_c8) + r13_199);\n    int64_t r9_91 = (ROLQ((r9_89 ^ rbp_90), 0x20));\n    int64_t r14_44 = (r14_43 + r9_91);\n    int64_t r13_201 = (RORQ((r13_199 ^ r14_44), 0x18));\n    int64_t rbp_92 = ((rbp_90 + var_e8) + r13_201);\n    int64_t r9_93 = (RORQ((r9_91 ^ rbp_92), 0x10));\n    int64_t r14_45 = (r14_44 + r9_93);\n    int64_t r14_47 = (ROLQ((r13_201 ^ r14_45), 1));\n    int64_t rbx_90 = ((rbx_88 + var_118) + rcx_88);\n    int64_t r11_90 = ((r11_88 + var_f0) + rdx_91);\n    int64_t r10_90 = ((r10_88 + var_d0) + rax_91);\n    int64_t r8_91 = (ROLQ((r8_89 ^ rbx_90), 0x20));\n    int64_t rsi_91 = (ROLQ((rsi_89 ^ r11_90), 0x20));\n    int64_t r15_109 = (r15_108 + r8_91);\n    int64_t r13_205 = (ROLQ((r13_194 ^ r10_90), 0x20));\n    int64_t r12_44 = (r12_43 + rsi_91);\n    int64_t rcx_90 = (RORQ((rcx_88 ^ r15_109), 0x18));\n    int64_t rdx_93 = (RORQ((rdx_91 ^ r12_44), 0x18));\n    int64_t rbx_92 = ((rbx_90 + var_f8) + rcx_90);\n    int64_t r14_49 = (r15_105 + r13_205);\n    int64_t r11_92 = ((r11_90 + var_c0) + rdx_93);\n    int64_t r8_93 = (RORQ((r8_91 ^ rbx_92), 0x10));\n    int64_t rsi_93 = (RORQ((rsi_91 ^ r11_92), 0x10));\n    int64_t r15_110 = (r15_109 + r8_93);\n    int64_t r12_45 = (r12_44 + rsi_93);\n    int64_t rcx_92 = (ROLQ((rcx_90 ^ r15_110), 1));\n    int64_t rdx_95 = (ROLQ((rdx_93 ^ r12_45), 1));\n    int64_t rax_93 = (RORQ((rax_91 ^ r14_49), 0x18));\n    int64_t rbp_94 = ((rbp_92 + var_130) + rcx_92);\n    int64_t r10_92 = ((r10_90 + var_108) + rax_93);\n    int64_t r13_207 = (RORQ((r13_205 ^ r10_92), 0x10));\n    int64_t r14_50 = (r14_49 + r13_207);\n    int64_t r13_209 = (ROLQ((r13_207 ^ rbp_94), 0x20));\n    int64_t r12_46 = (r12_45 + r13_209);\n    int64_t rax_95 = (ROLQ((rax_93 ^ r14_50), 1));\n    int64_t rcx_94 = (RORQ((rcx_92 ^ r12_46), 0x18));\n    int64_t rbp_96 = ((rbp_94 + var_d8) + rcx_94);\n    var_b8 = rbp_96;\n    int64_t r13_211 = (RORQ((r13_209 ^ rbp_96), 0x10));\n    int64_t var_40 = r13_211;\n    int64_t r12_47 = (r12_46 + r13_211);\n    int64_t rbx_94 = ((rbx_92 + var_138) + rdx_95);\n    int64_t var_68 = r12_47;\n    int64_t r9_95 = (ROLQ((r9_93 ^ rbx_94), 0x20));\n    int64_t var_90_1 = (ROLQ((r12_47 ^ rcx_94), 1));\n    int64_t r14_51 = (r14_50 + r9_95);\n    int64_t rdx_97 = (RORQ((rdx_95 ^ r14_51), 0x18));\n    int64_t rbx_96 = ((rbx_94 + var_128) + rdx_97);\n    int64_t var_b0_1 = rbx_96;\n    int64_t r11_94 = ((r11_92 + var_e0) + rax_95);\n    int64_t rbx_98 = (RORQ((rbx_96 ^ r9_95), 0x10));\n    int64_t r14_52 = (r14_51 + rbx_98);\n    int64_t var_58 = rbx_98;\n    int64_t r8_95 = (ROLQ((r8_93 ^ r11_94), 0x20));\n    int64_t var_60 = r14_52;\n    int64_t rdx_98 = (r14_45 + r8_95);\n    int64_t var_88_1 = (ROLQ((r14_52 ^ rdx_97), 1));\n    int64_t rax_97 = (RORQ((rax_95 ^ rdx_98), 0x18));\n    int64_t r14_55 = ((r11_94 + var_100) + rax_97);\n    int64_t var_a8_1 = r14_55;\n    int64_t r14_57 = (RORQ((r14_55 ^ r8_95), 0x10));\n    int64_t var_50 = r14_57;\n    int64_t r14_58 = (r14_57 + rdx_98);\n    int64_t var_78 = r14_58;\n    int64_t var_80_1 = (ROLQ((rax_97 ^ r14_58), 1));\n    int64_t rdx_101 = ((var_110 + r10_92) + r14_47);\n    int64_t rsi_95 = (ROLQ((rsi_93 ^ rdx_101), 0x20));\n    int64_t r15_111 = (r15_110 + rsi_95);\n    int64_t r13_213 = (RORQ((r14_47 ^ r15_111), 0x18));\n    int64_t rax_102 = ((rdx_101 + var_120) + r13_213);\n    int64_t var_a0_1 = rax_102;\n    int64_t rax_103 = 0;\n    int64_t rsi_97 = (RORQ((rsi_95 ^ rax_102), 0x10));\n    int64_t var_48 = rsi_97;\n    int64_t rsi_98 = (rsi_97 + r15_111);\n    int64_t var_70 = rsi_98;\n    int64_t var_98_1 = (ROLQ((rsi_98 ^ r13_213), 1));\n    while (true)\n    {\n        *(arg1 + (rax_103 << 3)) = (*(arg1 + (rax_103 << 3)) ^ (rbp_96 ^ r14_58));\n        rax_103 = (rax_103 + 1);\n        if (rax_103 == 8)\n        {\n            break;\n        }\n        rbp_96 = &var_b8[rax_103];\n        r14_58 = &var_78[rax_103];\n    }\n    return rax_103;\n}\n\n"
        },
        {
            "funcName": "sub_404c20",
            "funcStartAddr": "0x404c20",
            "funcEndAddr": "0x404d42",
            "decompiledFuncCode": "int64_t sub_404c20(void* arg1, int64_t arg2, uint64_t arg3)\n{\n    void* r14 = (arg1 + 0x60);\n    uint64_t r13 = arg3;\n    int64_t r12 = arg2;\n    int64_t r15 = *(arg1 + 0xe0);\n    uint64_t rbp = (0x80 - r15);\n    void* rdi = (r14 + r15);\n    if (rbp < arg3)\n    {\n        *(arg1 + 0xe0) = 0;\n        r13 = ((r15 + r13) - 0x80);\n        memcpy(rdi, arg2, rbp);\n        bool cond:0_1 = (*(arg1 + 0x40) - -0x80) <= 0x7f;\n        *(arg1 + 0x40) = (*(arg1 + 0x40) - -0x80);\n        int64_t rax_3;\n        rax_3 = cond:0_1;\n        int64_t rbp_1 = (rbp + r12);\n        *(arg1 + 0x48) = (*(arg1 + 0x48) + rax_3);\n        sub_403680(arg1, r14);\n        if (r13 <= 0x80)\n        {\n            r12 = rbp_1;\n            rdi = (*(arg1 + 0xe0) + r14);\n        }\n        else\n        {\n            uint64_t r15_2 = ((r13 - 0x81) >> 7);\n            r12 = (((r15_2 + 1) << 7) + rbp_1);\n            do\n            {\n                int64_t rsi_2 = rbp_1;\n                bool cond:1_1 = (*(arg1 + 0x40) - -0x80) <= 0x7f;\n                *(arg1 + 0x40) = (*(arg1 + 0x40) - -0x80);\n                int64_t rax_6;\n                rax_6 = cond:1_1;\n                rbp_1 = (rbp_1 - -0x80);\n                *(arg1 + 0x48) = (*(arg1 + 0x48) + rax_6);\n                sub_403680(arg1, rsi_2);\n            } while (r12 != rbp_1);\n            r13 = ((r13 + ((-r15_2) << 7)) - 0x80);\n            rdi = (*(arg1 + 0xe0) + r14);\n        }\n    }\n    int64_t rax_1 = memcpy(rdi, r12, r13);\n    *(arg1 + 0xe0) = (*(arg1 + 0xe0) + r13);\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404d50",
            "funcStartAddr": "0x404d50",
            "funcEndAddr": "0x404e1b",
            "decompiledFuncCode": "int64_t sub_404d50(int64_t* arg1, char* arg2)\n{\n    arg1[8] = 0;\n    int64_t rdx = 0x6a09e667f3bcc908;\n    arg1[0x1e] = 0;\n    void* rdi_1 = (&arg1[9] & 0xfffffffffffffff8);\n    for (uint64_t rcx_1 = (((arg1 - rdi_1) + 0xf8) >> 3); rcx_1 != 0; rcx_1 = (rcx_1 - 1))\n    {\n        *rdi_1 = 0;\n        rdi_1 = (rdi_1 + 8);\n    }\n    *arg1 = 0x6a09e667f3bcc908;\n    arg1[1] = -0x4498517a7b3558c5;\n    arg1[2] = 0x3c6ef372fe94f82b;\n    arg1[3] = -0x5ab00ac5a0e2c90f;\n    arg1[4] = 0x510e527fade682d1;\n    arg1[5] = -0x64fa9773d4c193e1;\n    arg1[6] = 0x1f83d9abfb41bd6b;\n    arg1[7] = 0x5be0cd19137e2179;\n    int64_t rax_2 = 0;\n    while (true)\n    {\n        arg1[rax_2] = (rdx ^ *(arg2 + (rax_2 << 3)));\n        rax_2 = (rax_2 + 1);\n        if (rax_2 == 8)\n        {\n            break;\n        }\n        rdx = arg1[rax_2];\n    }\n    arg1[0x1d] = *arg2;\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_404e20",
            "funcStartAddr": "0x404e20",
            "funcEndAddr": "0x404e86",
            "decompiledFuncCode": "int64_t sub_404e20(int64_t* arg1, int64_t arg2)\n{\n    if ((arg2 - 1) > 0x3f)\n    {\n        return 0xffffffff;\n    }\n    int128_t zmm0 = 0;\n    char var_48 = arg2;\n    int64_t var_47 = 0x10100;\n    int64_t var_3f = 0;\n    char var_37 = 0;\n    int64_t var_36 = 0;\n    int32_t var_2e = 0;\n    int16_t var_2a = 0;\n    int128_t var_28 = zmm0;\n    int128_t var_18 = zmm0;\n    sub_404d50(arg1, &var_48);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_404e90",
            "funcStartAddr": "0x404e90",
            "funcEndAddr": "0x404f7b",
            "decompiledFuncCode": "int64_t sub_404e90(int64_t* arg1, int64_t arg2, int64_t arg3, uint64_t arg4)\n{\n    if (((arg2 - 1) <= 0x3f && ((arg4 - 1) <= 0x3f && arg3 != 0)))\n    {\n        int128_t zmm0 = 0;\n        char var_d8 = arg2;\n        char var_d7 = arg4;\n        int64_t var_d6 = 0x101;\n        int64_t var_ce = 0;\n        int64_t var_c6 = 0;\n        int32_t var_be = 0;\n        int16_t var_ba = 0;\n        int128_t var_b8 = zmm0;\n        int128_t var_a8 = zmm0;\n        sub_404d50(arg1, &var_d8);\n        int64_t rcx = 0x10;\n        void var_98;\n        void* rdi = &var_98;\n        for (; rcx != 0; rcx = (rcx - 1))\n        {\n            *rdi = 0;\n            rdi = (rdi + 8);\n        }\n        __memcpy_chk(&var_98, arg3, arg4, 0x80);\n        sub_404c20(arg1, &var_98, 0x80);\n        data_60e238(&var_98, 0, 0x80);\n        return 0;\n    }\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_404f80",
            "funcStartAddr": "0x404f80",
            "funcEndAddr": "0x404f9b",
            "decompiledFuncCode": "int64_t sub_404f80(void* arg1, int64_t arg2, uint64_t arg3)\n{\n    if (arg3 == 0)\n    {\n        return 0;\n    }\n    sub_404c20(arg1, arg2, arg3);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_404fa0",
            "funcStartAddr": "0x404fa0",
            "funcEndAddr": "0x4050e4",
            "decompiledFuncCode": "int64_t sub_404fa0(void* arg1, int64_t arg2, int64_t arg3)\n{\n    int128_t zmm0 = 0;\n    int128_t var_58 = zmm0;\n    int128_t var_48 = zmm0;\n    int128_t var_38 = zmm0;\n    int128_t var_28 = zmm0;\n    int64_t rax_3;\n    if (((arg2 == 0 || (arg2 != 0 && *(arg1 + 0xe8) > arg3)) || ((arg2 != 0 && *(arg1 + 0xe8) <= arg3) && *(arg1 + 0x50) != 0)))\n    {\n        rax_3 = 0xffffffff;\n    }\n    if (((arg2 != 0 && *(arg1 + 0xe8) <= arg3) && *(arg1 + 0x50) == 0))\n    {\n        int64_t rax = *(arg1 + 0xe0);\n        int64_t rdx_1 = (rax + *(arg1 + 0x40));\n        *(arg1 + 0x48) = (*(arg1 + 0x48) + 0);\n        bool cond:0_1 = *(arg1 + 0xf0) != 0;\n        *(arg1 + 0x40) = rdx_1;\n        if (cond:0_1)\n        {\n            *(arg1 + 0x58) = -1;\n        }\n        *(arg1 + 0x50) = -1;\n        memset(((arg1 + 0x60) + rax), 0, (0x80 - rax));\n        sub_403680(arg1, (arg1 + 0x60));\n        void* rcx_1 = arg1;\n        int128_t* rax_1 = &var_58;\n        int64_t __saved_rbx;\n        do\n        {\n            int64_t rdx_3 = *rcx_1;\n            rax_1 = (rax_1 + 8);\n            rcx_1 = (rcx_1 + 8);\n            *(rax_1 - 8) = rdx_3;\n            *(rax_1 - 7) = (rdx_3 >> 8);\n            *(rax_1 - 6) = (rdx_3 >> 0x10);\n            *(rax_1 - 5) = (rdx_3 >> 0x18);\n            *(rax_1 - 4) = (rdx_3 >> 0x20);\n            *(rax_1 - 3) = (rdx_3 >> 0x28);\n            *(rax_1 - 1) = (rdx_3 >> 0x38);\n            *(rax_1 - 2) = (rdx_3 >> 0x30);\n        } while (rax_1 != &__saved_rbx);\n        memcpy(arg2, &var_58, *(arg1 + 0xe8));\n        data_60e238(&var_58, 0, 0x40);\n        rax_3 = 0;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4050f0",
            "funcStartAddr": "0x4050f0",
            "funcEndAddr": "0x4051bd",
            "decompiledFuncCode": "int64_t sub_4050f0(int64_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    int64_t arg5, uint64_t arg6)\n{\n    if (((arg3 == 0 & arg4 != 0) == 0 && (arg1 != 0 && (((arg5 != 0 || (arg5 == 0 && arg6 == 0)) && (arg2 - 1) <= 0x3f) && arg6 <= 0x40))))\n    {\n        void var_128;\n        int32_t rax_2;\n        int32_t rax_4;\n        if (arg6 != 0)\n        {\n            rax_4 = sub_404e90(&var_128, arg2, arg5, arg6);\n        }\n        else\n        {\n            rax_2 = sub_404e20(&var_128, arg2);\n        }\n        int64_t rax_3;\n        if (((arg6 != 0 && rax_4 < 0) || (arg6 == 0 && rax_2 < 0)))\n        {\n            rax_3 = 0xffffffff;\n        }\n        if (((arg6 != 0 && rax_4 >= 0) || (arg6 == 0 && rax_2 >= 0)))\n        {\n            if (arg4 != 0)\n            {\n                sub_404c20(&var_128, arg3, arg4);\n            }\n            sub_404fa0(&var_128, arg1, arg2);\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "thunk_4051c0",
            "funcStartAddr": "0x4051c0",
            "funcEndAddr": "0x4051c5",
            "decompiledFuncCode": "int64_t j_sub_4050f0(int64_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    int64_t arg5, uint64_t arg6)\n{\n    /* tailcall */\n    return sub_4050f0(arg1, arg2, arg3, arg4, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_4051d0",
            "funcStartAddr": "0x4051d0",
            "funcEndAddr": "0x4052b7",
            "decompiledFuncCode": "uint64_t sub_4051d0(FILE* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t rax = malloc(0x8000);\n    int32_t rbp_1;\n    if (rax == 0)\n    {\n        rbp_1 = -1;\n    }\n    else\n    {\n        void var_138;\n        sub_404e20(&var_138, arg3);\n        uint64_t rbx_1;\n        do\n        {\n            rbx_1 = 0;\n            while (true)\n            {\n                uint64_t rax_2 = fread((rax + rbx_1), 1, (0x8000 - rbx_1), arg1);\n                rbx_1 = (rbx_1 + rax_2);\n                if (rbx_1 == 0x8000)\n                {\n                    sub_404f80(&var_138, rax, 0x8000);\n                    break;\n                }\n                if (rax_2 == 0)\n                {\n                    rbp_1 = -1;\n                    if (ferror(arg1) != 0)\n                    {\n                        break;\n                    }\n                }\n                else if (feof(arg1) == 0)\n                {\n                    continue;\n                }\n                if (rbx_1 != 0)\n                {\n                    sub_404f80(&var_138, rax, rbx_1);\n                }\n                rbp_1 = 0;\n                sub_404fa0(&var_138, arg2, arg3);\n                break;\n            }\n        } while (rbx_1 == 0x8000);\n        free(rax);\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_4052c0",
            "funcStartAddr": "0x4052c0",
            "funcEndAddr": "0x4052ca",
            "decompiledFuncCode": "int64_t sub_4052c0() __noreturn\n{\n    /* tailcall */\n    return sub_403280(1);\n}\n\n"
        },
        {
            "funcName": "sub_4052d0",
            "funcStartAddr": "0x4052d0",
            "funcEndAddr": "0x4053e6",
            "decompiledFuncCode": "int64_t sub_4052d0(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_4053ad;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_4053ad:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_4053f0",
            "funcStartAddr": "0x4053f0",
            "funcEndAddr": "0x405461",
            "decompiledFuncCode": "int64_t sub_4053f0(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_4070e0(0, 8, arg2), sub_4073f0(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_405470",
            "funcStartAddr": "0x405470",
            "funcEndAddr": "0x405588",
            "decompiledFuncCode": "char* sub_405470(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    uint64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_407410(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_407410(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_405590",
            "funcStartAddr": "0x405590",
            "funcEndAddr": "0x405600",
            "decompiledFuncCode": "int64_t sub_405590(uint64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_4052d0(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_4053f0(arg1, arg2, rax);\n        sub_405470(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405600",
            "funcStartAddr": "0x405600",
            "funcEndAddr": "0x40564d",
            "decompiledFuncCode": "int64_t sub_405600(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_405650",
            "funcStartAddr": "0x405650",
            "funcEndAddr": "0x405658",
            "decompiledFuncCode": "int64_t sub_405650(int64_t arg1)\n{\n    data_60e330 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405660",
            "funcStartAddr": "0x405660",
            "funcEndAddr": "0x405668",
            "decompiledFuncCode": "int64_t sub_405660(char arg1)\n{\n    data_60e328 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405670",
            "funcStartAddr": "0x405670",
            "funcEndAddr": "0x40570e",
            "decompiledFuncCode": "void sub_405670(void* arg1)\n{\n    int32_t rax = sub_409690(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60e328 == 0 || (data_60e328 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60e330;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_407260(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60e328 != 0) && *rax_1 == 0x20)) && sub_409690(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60e250);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405710",
            "funcStartAddr": "0x405710",
            "funcEndAddr": "0x405715",
            "decompiledFuncCode": "int64_t sub_405710(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_405720",
            "funcStartAddr": "0x405720",
            "funcEndAddr": "0x405741",
            "decompiledFuncCode": "void sub_405720(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405750",
            "funcStartAddr": "0x405750",
            "funcEndAddr": "0x4057e3",
            "decompiledFuncCode": "FILE* sub_405750(char* arg1, char* arg2)\n{\n    FILE* rax = fopen(arg1, arg2);\n    FILE* rbx = rax;\n    if (rax != 0)\n    {\n        int32_t rax_1 = fileno(rax);\n        if (rax_1 <= 2)\n        {\n            int32_t rax_3 = sub_407430(rax_1);\n            if (rax_3 < 0)\n            {\n                int32_t* rax_7 = __errno_location();\n                FILE* rdi_5 = rbx;\n                rbx = nullptr;\n                int32_t r12_2 = *rax_7;\n                sub_4085e0(rdi_5);\n                *rax_7 = r12_2;\n            }\n            else\n            {\n                int32_t rax_4 = sub_4085e0(rbx);\n                FILE* rax_5;\n                if (rax_4 == 0)\n                {\n                    rax_5 = fdopen(rax_3, arg2);\n                    rbx = rax_5;\n                }\n                if ((rax_4 != 0 || (rax_4 == 0 && rax_5 == 0)))\n                {\n                    int32_t* rax_6 = __errno_location();\n                    int32_t rbp_1 = *rax_6;\n                    close(rax_3);\n                    *rax_6 = rbp_1;\n                    rbx = nullptr;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4057f0",
            "funcStartAddr": "0x4057f0",
            "funcEndAddr": "0x405889",
            "decompiledFuncCode": "char* sub_4057f0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40ac78;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60e338 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405890",
            "funcStartAddr": "0x405890",
            "funcEndAddr": "0x405982",
            "decompiledFuncCode": "char* sub_405890(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_409750();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_405971:\n                void* const rbx_1 = &data_40ac7c;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_405971;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_405971;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_405971;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_405971;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_405971;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_405971;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_405971;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40ac85;\n            if (cond:2_1)\n            {\n                rbx = &data_40ac82;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_405971;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_405971;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_405971;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_405971;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_405971;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40ac89;\n            if (cond:1_1)\n            {\n                rbx = &data_40ac7e;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_405990",
            "funcStartAddr": "0x401b00",
            "funcEndAddr": "0x406bb1",
            "decompiledFuncCode": "int64_t sub_405990(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_405a28:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_405d9c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_405de4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_405990(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_405dfb;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_405f35;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_405b85;\n                            }\n                            goto label_405e70;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_405f35;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_405d60;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_405d60:\n                            if (var_c0 == 0)\n                            {\n                                goto label_405d6b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_405bc7:\n                            if (var_5c == 0)\n                            {\n                                goto label_405bd8;\n                            }\n                        label_405d90:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_405d98;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_405fcb;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_405fcb:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_405fda:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_405d9c;\n                            }\n                            goto label_405d60;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_405d60;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_405d60;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_405fcb;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_405b66;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_405b66:\n                            if (var_5c == 0)\n                            {\n                                goto label_405b85;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_405b85;\n                            }\n                            goto label_405fda;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_405b5d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_405d6b;\n                            }\n                            goto label_405b66;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_405f90:\n                            rdx = r11_1 == 2;\n                        label_405b85:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_405c8c;\n                            }\n                            goto label_405b8f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_405d0d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_405cdd;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_405d3a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_406acd;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_405ca4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_405b39;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_406130;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_406130;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_406a80:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_405de4:\n                            rbx_1 = sub_405990(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_405dfb:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_405f35;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_405e87;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405f35;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_405e50:\n                                r13 = 0;\n                                goto label_405c0b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_405bd8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_405c0b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_405c15;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_405c15:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_405c1d;\n                            }\n                            case 9:\n                            {\n                                goto label_405e00;\n                            }\n                            case 0xa:\n                            {\n                                goto label_405d78;\n                            }\n                            case 0xb:\n                            {\n                                goto label_405e60;\n                            }\n                            case 0xc:\n                            {\n                                goto label_405e40;\n                            }\n                            case 0xd:\n                            {\n                                goto label_405e29;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_40618a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_405e15;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_40616a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_406152;\n                            }\n                            case 0x27:\n                            {\n                                goto label_405d0d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_405cdd;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_405d3a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_405b39;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_406130:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_405f30:\n                            var_b8 = 0;\n                        label_405f35:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_405f84:\n                                if (rdx == 0)\n                                {\n                                    goto label_405f90;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_406481:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_405ca4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_405d9c;\n                                }\n                                r13 = var_98;\n                                goto label_405c1d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_409610(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_405d9c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_406481;\n                            }\n                            goto label_405f84;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_405e70:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_405d9c;\n                                }\n                                var_b8 = 0;\n                            label_405e87:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_405ed2;\n                                    }\n                                    rax_8 = r10;\n                                label_405eca:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_405ed2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_405c8c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_405f13;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_405eca;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_405c8c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405f30;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_405e45;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_405d7d;\n                            }\n                            case 9:\n                            {\n                            label_405e00:\n                                rbp_3 = 0x74;\n                                goto label_405d7d;\n                            }\n                            case 0xa:\n                            {\n                            label_405d78:\n                                rbp_3 = 0x6e;\n                            label_405d7d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_405d90;\n                                }\n                                goto label_405bd8;\n                            }\n                            case 0xb:\n                            {\n                            label_405e60:\n                                rbp_3 = 0x76;\n                                goto label_405e45;\n                            }\n                            case 0xc:\n                            {\n                            label_405e40:\n                                rbp_3 = 0x66;\n                            label_405e45:\n                                if (var_5c == 0)\n                                {\n                                    goto label_405e50;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_405d98:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_405d9c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_405e29:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_405d60;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_40618a:\n                                rbp_3 = 0x20;\n                                goto label_406152;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_405e15:\n                                rdx = 0;\n                            label_405d6b:\n                                r13 = 0;\n                                goto label_405b85;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_40616a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_405b85;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_405b8f:\n                                rax_8 = 0;\n                                goto label_405b91;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_406152:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_405b91;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_405d0d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_405b85;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_406acd;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_405c8c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_405cdd:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_406acd:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_405d9c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_405c8c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_405bc7;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_405ca4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_405b85;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_406270:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_405b85;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_406270;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_406270;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_406270;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_406270;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_406a80;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_405f13:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_405c8c;\n                                }\n                            label_405b91:\n                                if (arg7 == 0)\n                                {\n                                    goto label_405c8c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_405c8c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_405bc7;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_405d3a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_405d60;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_405ca4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_405c1d;\n                                }\n                            label_405c1d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_405c26;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_405c26:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_405b39:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_405d6b;\n                                }\n                                goto label_405b5d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_406216:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_405a28;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_405a28;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_405a28;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40ac7c;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40ac7c;\n            }\n            goto label_405a28;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40ac7c;\n            goto label_405a28;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_405a28;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_405890(&data_40ac8d, r13);\n                arg9 = sub_405890(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_405a28;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_406216;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_405a28;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406bc0",
            "funcStartAddr": "0x401b05",
            "funcEndAddr": "0x406d5e",
            "decompiledFuncCode": "char* sub_406bc0(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60e298;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60e2b0 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_407c30();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60e2a0)\n        {\n            int64_t rax_9 = sub_407a40(0, rsi_1);\n            int128_t zmm0 = data_60e2a0;\n            rbx = rax_9;\n            data_60e298 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_407a40(rbx, rsi_1);\n            data_60e298 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60e2b0;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60e2b0 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_405990(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60e340)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_4079e0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_405990(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_406d60",
            "funcStartAddr": "0x406d60",
            "funcEndAddr": "0x406d94",
            "decompiledFuncCode": "int64_t sub_406d60(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60e440;\n    }\n    int64_t rax_1 = sub_407be0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406da0",
            "funcStartAddr": "0x406da0",
            "funcEndAddr": "0x406daf",
            "decompiledFuncCode": "uint64_t sub_406da0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e440;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_406db0",
            "funcStartAddr": "0x406db0",
            "funcEndAddr": "0x406dbf",
            "decompiledFuncCode": "void sub_406db0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e440;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_406dc0",
            "funcStartAddr": "0x406dc0",
            "funcEndAddr": "0x406df3",
            "decompiledFuncCode": "uint64_t sub_406dc0(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60e440;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_406e00",
            "funcStartAddr": "0x406e00",
            "funcEndAddr": "0x406e13",
            "decompiledFuncCode": "uint64_t sub_406e00(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e440;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406e20",
            "funcStartAddr": "0x406e20",
            "funcEndAddr": "0x406e4b",
            "decompiledFuncCode": "void sub_406e20(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60e440;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60e440;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406e50",
            "funcStartAddr": "0x406e50",
            "funcEndAddr": "0x406ec2",
            "decompiledFuncCode": "int64_t sub_406e50(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60e440;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_405990(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406ed0",
            "funcStartAddr": "0x406ed0",
            "funcEndAddr": "0x406fb1",
            "decompiledFuncCode": "char* sub_406ed0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60e440;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_405990(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_4079e0((rax_2 + 1));\n    sub_405990(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_406fc0",
            "funcStartAddr": "0x406fc0",
            "funcEndAddr": "0x406fca",
            "decompiledFuncCode": "int64_t sub_406fc0(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_406ed0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406fd0",
            "funcStartAddr": "0x406fd0",
            "funcEndAddr": "0x407065",
            "decompiledFuncCode": "uint64_t sub_406fd0()\n{\n    uint64_t rax_2 = data_60e2b0;\n    int64_t r12 = data_60e298;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60e340)\n    {\n        rax_2 = free(rdi_2);\n        *data_60e2a0 = 0x100;\n        *(data_60e2a0 + 8) = 0x60e340;\n    }\n    if (r12 != 0x60e2a0)\n    {\n        rax_2 = free(r12);\n        data_60e298 = 0x60e2a0;\n    }\n    data_60e2b0 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_407070",
            "funcStartAddr": "0x407070",
            "funcEndAddr": "0x407081",
            "decompiledFuncCode": "int64_t sub_407070(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406bc0(arg1, arg2, -1, &data_60e440);\n}\n\n"
        },
        {
            "funcName": "sub_407090",
            "funcStartAddr": "0x407090",
            "funcEndAddr": "0x40709a",
            "decompiledFuncCode": "int64_t sub_407090(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_406bc0(arg1, arg2, arg3, &data_60e440);\n}\n\n"
        },
        {
            "funcName": "sub_4070a0",
            "funcStartAddr": "0x4070a0",
            "funcEndAddr": "0x4070b6",
            "decompiledFuncCode": "int64_t sub_4070a0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406bc0(0, arg1, -1, &data_60e440);\n}\n\n"
        },
        {
            "funcName": "sub_4070c0",
            "funcStartAddr": "0x4070c0",
            "funcEndAddr": "0x4070d2",
            "decompiledFuncCode": "int64_t sub_4070c0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406bc0(0, arg1, arg2, &data_60e440);\n}\n\n"
        },
        {
            "funcName": "sub_4070e0",
            "funcStartAddr": "0x401b0a",
            "funcEndAddr": "0x407148",
            "decompiledFuncCode": "char* sub_4070e0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406bc0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_407150",
            "funcStartAddr": "0x401b0f",
            "funcEndAddr": "0x4071b4",
            "decompiledFuncCode": "char* sub_407150(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406bc0(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4071c0",
            "funcStartAddr": "0x4071c0",
            "funcEndAddr": "0x4071cc",
            "decompiledFuncCode": "int64_t sub_4071c0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4070e0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4071d0",
            "funcStartAddr": "0x4071d0",
            "funcEndAddr": "0x4071df",
            "decompiledFuncCode": "int64_t sub_4071d0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_407150(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4071e0",
            "funcStartAddr": "0x4071e0",
            "funcEndAddr": "0x407250",
            "decompiledFuncCode": "char* sub_4071e0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60e470;\n    int128_t var_48 = data_60e440;\n    int128_t var_38 = data_60e450;\n    int128_t var_28 = data_60e460;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_406bc0(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_407250",
            "funcStartAddr": "0x407250",
            "funcEndAddr": "0x40725d",
            "decompiledFuncCode": "int64_t sub_407250(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_4071e0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_407260",
            "funcStartAddr": "0x407260",
            "funcEndAddr": "0x407271",
            "decompiledFuncCode": "int64_t sub_407260(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4071e0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_407280",
            "funcStartAddr": "0x407280",
            "funcEndAddr": "0x40728a",
            "decompiledFuncCode": "int64_t sub_407280(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4071e0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_407290",
            "funcStartAddr": "0x401b14",
            "funcEndAddr": "0x4072fe",
            "decompiledFuncCode": "char* sub_407290(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406bc0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_407300",
            "funcStartAddr": "0x407300",
            "funcEndAddr": "0x40736c",
            "decompiledFuncCode": "char* sub_407300(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60e440;\n    int128_t var_38 = data_60e450;\n    int128_t var_28 = data_60e460;\n    int64_t var_18 = data_60e470;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_406bc0(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4073f0",
            "funcStartAddr": "0x4073f0",
            "funcEndAddr": "0x407401",
            "decompiledFuncCode": "int64_t sub_4073f0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406bc0(arg1, arg2, -1, &data_60e260);\n}\n\n"
        },
        {
            "funcName": "sub_407410",
            "funcStartAddr": "0x407410",
            "funcEndAddr": "0x407426",
            "decompiledFuncCode": "int64_t sub_407410(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406bc0(0, arg1, -1, &data_60e260);\n}\n\n"
        },
        {
            "funcName": "sub_407430",
            "funcStartAddr": "0x407430",
            "funcEndAddr": "0x40743e",
            "decompiledFuncCode": "int64_t sub_407430(int32_t arg1)\n{\n    /* tailcall */\n    return sub_408660(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_407440",
            "funcStartAddr": "0x401b19",
            "funcEndAddr": "0x40781d",
            "decompiledFuncCode": "int64_t sub_407440(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40b9cb, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407820",
            "funcStartAddr": "0x407820",
            "funcEndAddr": "0x407840",
            "decompiledFuncCode": "int64_t sub_407820(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_407440(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_407840",
            "funcStartAddr": "0x407840",
            "funcEndAddr": "0x4078a0",
            "decompiledFuncCode": "int64_t sub_407840(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_407440(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4078a0",
            "funcStartAddr": "0x4078a0",
            "funcEndAddr": "0x40795c",
            "decompiledFuncCode": "int64_t sub_4078a0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_407440(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_407960",
            "funcStartAddr": "0x407960",
            "funcEndAddr": "0x4079d4",
            "decompiledFuncCode": "int64_t sub_407960()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_4079e0",
            "funcStartAddr": "0x4079e0",
            "funcEndAddr": "0x4079fa",
            "decompiledFuncCode": "int64_t sub_4079e0(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_407c30();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407a40",
            "funcStartAddr": "0x407a40",
            "funcEndAddr": "0x407a76",
            "decompiledFuncCode": "int64_t sub_407a40(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_407c30();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407b8a",
            "funcStartAddr": "0x407b8a",
            "funcEndAddr": "0x407b90",
            "decompiledFuncCode": "int64_t sub_407b8a() __noreturn\n{\n    sub_407c30();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407b90",
            "funcStartAddr": "0x407b90",
            "funcEndAddr": "0x407ba7",
            "decompiledFuncCode": "int64_t sub_407b90(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_4079e0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_407bb0",
            "funcStartAddr": "0x407bb0",
            "funcEndAddr": "0x407bde",
            "decompiledFuncCode": "int64_t sub_407bb0(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_407c30();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407be0",
            "funcStartAddr": "0x407be0",
            "funcEndAddr": "0x407c08",
            "decompiledFuncCode": "int64_t sub_407be0(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_4079e0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_407c10",
            "funcStartAddr": "0x407c10",
            "funcEndAddr": "0x407c23",
            "decompiledFuncCode": "int64_t sub_407c10(char* arg1)\n{\n    /* tailcall */\n    return sub_407be0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_407c30",
            "funcStartAddr": "0x407c30",
            "funcEndAddr": "0x407c61",
            "decompiledFuncCode": "int64_t sub_407c30() __noreturn\n{\n    error(data_60e250, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407c70",
            "funcStartAddr": "0x407c70",
            "funcEndAddr": "0x407d40",
            "decompiledFuncCode": "int64_t sub_407c70(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    char* arg5, int64_t arg6, int32_t arg7)\n{\n    int32_t rbx = arg7;\n    int64_t var_40;\n    int32_t rax = sub_4081a0(arg1, nullptr, arg2, &var_40, arg5);\n    int64_t rbp;\n    int32_t* r14_1;\n    if (rax == 0)\n    {\n        rbp = var_40;\n        if ((rbp < arg3 || (rbp >= arg3 && rbp > arg4)))\n        {\n            int32_t* rax_1 = __errno_location();\n            r14_1 = rax_1;\n            *r14_1 = (((rax_1 - rax_1) & 0xffffffd7) + 0x4b);\n        }\n    }\n    else\n    {\n        int32_t* rax_8 = __errno_location();\n        r14_1 = rax_8;\n        if (rax == 1)\n        {\n            *rax_8 = 0x4b;\n        }\n        else if (rax == 3)\n        {\n            *rax_8 = 0;\n        }\n    }\n    if (((rax == 0 && (rbp < arg3 || (rbp >= arg3 && rbp > arg4))) || rax != 0))\n    {\n        int64_t rax_5 = sub_407410(arg1);\n        uint64_t rsi = *r14_1;\n        if (rsi == 0x16)\n        {\n            rsi = 0;\n        }\n        if (rbx == 0)\n        {\n            rbx = 1;\n        }\n        error(rbx, rsi, \"%s: %s\", arg6, rax_5);\n        rbp = var_40;\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_407d40",
            "funcStartAddr": "0x407d40",
            "funcEndAddr": "0x407d61",
            "decompiledFuncCode": "int64_t sub_407d40(char* arg1, int64_t arg2, int64_t arg3, char* arg4, \n    int64_t arg5, int32_t arg6)\n{\n    return sub_407c70(arg1, 0xa, arg2, arg3, arg4, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_407d70",
            "funcStartAddr": "0x407d70",
            "funcEndAddr": "0x408194",
            "decompiledFuncCode": "uint64_t sub_407d70(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoul\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_407e32:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = strtoul(arg1, r15, arg3);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_407e32;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_407e32;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_407e32;\n            }\n        label_407e6f:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_407ed0;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_407ed0;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_4080f8:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_407eda;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_407eda;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_4080f8;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40807b:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_407fd4;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_407f75;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4080b3:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_407f1d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407f3f:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_407f1d;\n                        }\n                        goto label_407f47;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407efe:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_407f47;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_407f1d;\n                        }\n                    label_407f47:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_407f1d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_408048:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_407fd4;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_408018:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_407fd4;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407fe6:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_407fd4;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407fab:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_407fd4:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_407f1d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_407f1d;\n                    }\n                }\n            }\n            else\n            {\n            label_407ed0:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_407eda:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_407f75;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_407f47;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_407f1d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_407f75;\n                    }\n                    case 3:\n                    {\n                        goto label_40807b;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_4080b3;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_407f3f;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_407efe;\n                    }\n                    case 0xe:\n                    {\n                        goto label_408048;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_408018;\n                    }\n                    case 0x17:\n                    {\n                        goto label_407fe6;\n                    }\n                    case 0x18:\n                    {\n                        goto label_407fab;\n                    }\n                    case 0x21:\n                    {\n                        goto label_407f1d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_407f47;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_407f1d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_407e10;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_407f47;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_407f1d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_407e32;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_407e10:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_407e10;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_407e6f;\n            }\n        label_407f75:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_4081a0",
            "funcStartAddr": "0x4081a0",
            "funcEndAddr": "0x4085d4",
            "decompiledFuncCode": "uint64_t sub_4081a0(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_40826a:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_40826a;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_40826a;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_40826a;\n            }\n        label_4082a7:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_408310;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_408310;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_408538:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_40831a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_40831a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_408538;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4084bb:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_408414;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_4083b5;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4084f3:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_40835d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40837f:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_40835d;\n                        }\n                        goto label_408387;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40833e:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_408387;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_40835d;\n                        }\n                    label_408387:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_40835d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_408488:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_408414;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_408458:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_408414;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_408426:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_408414;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4083eb:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_408414:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_40835d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_40835d;\n                    }\n                }\n            }\n            else\n            {\n            label_408310:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_40831a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_4083b5;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_408387;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_40835d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_4083b5;\n                    }\n                    case 3:\n                    {\n                        goto label_4084bb;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_4084f3;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_40837f;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_40833e;\n                    }\n                    case 0xe:\n                    {\n                        goto label_408488;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_408458;\n                    }\n                    case 0x17:\n                    {\n                        goto label_408426;\n                    }\n                    case 0x18:\n                    {\n                        goto label_4083eb;\n                    }\n                    case 0x21:\n                    {\n                        goto label_40835d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_408387;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_40835d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_408242;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_408387;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_40835d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_40826a;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_408242:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_408242;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_4082a7;\n            }\n        label_4083b5:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_4085e0",
            "funcStartAddr": "0x4085e0",
            "funcEndAddr": "0x40865b",
            "decompiledFuncCode": "int64_t sub_4085e0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_4087a0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_408660",
            "funcStartAddr": "0x408660",
            "funcEndAddr": "0x408795",
            "decompiledFuncCode": "uint64_t sub_408660(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_60e478 < 0)\n    {\n        rax_5 = sub_408660();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_408660(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_60e478 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_60e478 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_60e478 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_60e478 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_60e478 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4087a0",
            "funcStartAddr": "0x4087a0",
            "funcEndAddr": "0x4087e0",
            "decompiledFuncCode": "int64_t sub_4087a0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_4087e0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_4087e0",
            "funcStartAddr": "0x4087e0",
            "funcEndAddr": "0x408837",
            "decompiledFuncCode": "off64_t sub_4087e0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_408840",
            "funcStartAddr": "0x408840",
            "funcEndAddr": "0x40891f",
            "decompiledFuncCode": "uint64_t sub_408840(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_408920",
            "funcStartAddr": "0x408920",
            "funcEndAddr": "0x408f3c",
            "decompiledFuncCode": "uint64_t sub_408920(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_408b50;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408a76;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408a76;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_408a76:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_408b50:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_408b7e;\n                }\n                *arg5 = r12;\n            label_408b7e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_408b9c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_408b9c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_408b9c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_408b0e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_408b0e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_408f40",
            "funcStartAddr": "0x408f40",
            "funcEndAddr": "0x409506",
            "decompiledFuncCode": "uint64_t sub_408f40(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40917c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_409008;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_409008:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_408840(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_40c521;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_408840(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40917c;\n                }\n                *arg7 = rdx_2;\n            label_40917c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_409280;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_40c521;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_4092f0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_409280;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_409280;\n                            }\n                            goto label_409241;\n                        }\n                    label_409241:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_408920(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40c522);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_409280:\n                            rdx = &r14_1[1];\n                        label_4090c1:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_4092be;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_4092be:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_40c540;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_4092f0:\n                                        r14_2 = sub_408920(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_4093ad;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_4093ad:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40917c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_409008;\n        }\n        goto label_4090c1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_409570",
            "funcStartAddr": "0x409570",
            "funcEndAddr": "0x409588",
            "decompiledFuncCode": "uint64_t sub_409570(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_409610",
            "funcStartAddr": "0x409610",
            "funcEndAddr": "0x40968a",
            "decompiledFuncCode": "uint64_t sub_409610(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40c524[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40963a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40963a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_4096f0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_409690",
            "funcStartAddr": "0x409690",
            "funcEndAddr": "0x4096ed",
            "decompiledFuncCode": "uint64_t sub_409690(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_4085e0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4096f0",
            "funcStartAddr": "0x4096f0",
            "funcEndAddr": "0x40974e",
            "decompiledFuncCode": "int64_t sub_4096f0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40c544;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409750",
            "funcStartAddr": "0x409750",
            "funcEndAddr": "0x409cb2",
            "decompiledFuncCode": "char* sub_409750()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60e4b8;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40c524[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40984c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_409896;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40984c:\n            r15 = &data_40c524[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_409896:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40994c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_409adb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_409988:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_409988;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_4099c2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_4099c2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40c524[0x1b];\n                                    free(rdi_26);\n                                    sub_4085e0(rax_12);\n                                    goto label_4098d7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_409b9b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_409b9b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_409be9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_409be9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40994c;\n                        }\n                        break;\n                    }\n                label_409adb:\n                    sub_4085e0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40c524[0x1b];\n            }\n        label_4098d7:\n            free(rbp_3);\n        }\n        data_60e4b8 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x409cc0",
            "funcEndAddr": "0x409d1d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x409d20",
            "funcEndAddr": "0x409d21",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_409d30",
            "funcStartAddr": "0x409d30",
            "funcEndAddr": "0x409d48",
            "decompiledFuncCode": "int64_t sub_409d30(void (* arg1)(void*))\n{\n    int64_t rdx = data_60e228;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_409d48",
            "funcStartAddr": "0x409d48",
            "funcEndAddr": "0x409d68",
            "decompiledFuncCode": "int64_t sub_409d48(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60de30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}